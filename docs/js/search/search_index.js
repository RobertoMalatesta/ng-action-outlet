var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/ActionAbstract.html",[0,0.685,1,1.053]],["body/classes/ActionAbstract.html",[0,1.025,1,1.468,2,0.429,3,0.141,4,0.287,5,0.123,6,0.439,7,0.735,8,0.543,9,0.512,10,0.901,11,0.487,12,1.548,13,1.548,14,1.548,15,1.697,16,1.697,17,2.739,18,1.352,19,1.766,20,1.766,21,2.021,22,2.042,23,2.188,24,1.657,25,0.843,26,0.843,27,0.042,28,0.396,29,1.548,30,0.546,31,0.899,32,0.571,33,1.548,34,1.912,35,1.861,36,0.927,37,1.826,38,3.339,39,3.38,40,0.638,41,1.207,42,2.687,43,1.015,44,1.548,45,4.686,46,3.739,47,3.069,48,3.002,49,1.746,50,1.548,51,1.545,52,0.574,53,1.746,54,1.358,55,2.484,56,1.271,57,1.126,58,1.548,59,1.088,60,1.548,61,1.088,62,1.088,63,1.088,64,1.904,65,1.088,66,1.548,67,2.188,68,2.924,69,1.548,70,1.271,71,2.308,72,1.548,73,1.548,74,0.089,75,1.331,76,2.325,77,0.675,78,2.502,79,2.502,80,1.527,81,2.356,82,2.356,83,1.746,84,1.746,85,1.746,86,1.746,87,2.186,88,1.746,89,1.746,90,1.746,91,1.746,92,1.746,93,1.746,94,1.746,95,1.088,96,1.088,97,1.088,98,2.502,99,0.891,100,2.561,101,1.548,102,0.952,103,1.465,104,1.352,105,2.319,106,2.067,107,3.352,108,1.548,109,1.737,110,1.548,111,1.107,112,1.207,113,1.082,114,0.564,115,0.481,116,0.883,117,1.746,118,1.746,119,0.789,120,1.098,121,1.088,122,1.088,123,2.837,124,1.088,125,1.825,126,1.088,127,0.883,128,2.739,129,3.072,130,0.883,131,0.883,132,0.883,133,2.061,134,2.265,135,0.883,136,0.883,137,2.186,138,0.883,139,2.881,140,1.746,141,1.746,142,0.883,143,0.883,144,2.299,145,1.453,146,0.883,147,1.746,148,1.746,149,0.883,150,0.883,151,2.574,152,1.424,153,1.527,154,1.088,155,0.952,156,1.271,157,0.607,158,1.271,159,0.883,160,1.893,161,0.883,162,2.924,163,0.808,164,0.883,165,0.883,166,1.088,167,1.746,168,0.883,169,1.698,170,2.473,171,1.979,172,1.453,173,0.883,174,1.986,175,0.883,176,0.883,177,0.883,178,0.883,179,1.746,180,0.883,181,1.088,182,0.883,183,2.739,184,1.088,185,0.883,186,1.088,187,0.883,188,1.088,189,0.883,190,0.883,191,1.088,192,0.45,193,0.346,194,3.313,195,1.271,196,0.543,197,2.067,198,0.883,199,0.883,200,0.883,201,0.621,202,0.181,203,0.203,204,0.317,205,0.312,206,0.346,207,0.429,208,0.312,209,1.352,210,1.088,211,1.352,212,0.883,213,0.725,214,0.203,215,0.883,216,0.725,217,0.725,218,0.883,219,2.922,220,0.883,221,2.067,222,0.883,223,0.883,224,2.825,225,0.883,226,0.883,227,0.883,228,0.883,229,1.893,230,0.883,231,0.883,232,1.548,233,0.883,234,1.548,235,0.883,236,1.548,237,0.883,238,1.548,239,0.883,240,1.548,241,0.883,242,0.883,243,1.548,244,0.883,245,0.883,246,0.883,247,0.883,248,0.883,249,0.883,250,1.548,251,3.559,252,1.548,253,1.548,254,0.429,255,0.725,256,1.548,257,1.548,258,2.825,259,1.548,260,1.548,261,0.883,262,0.883,263,0.883,264,0.883,265,0.883,266,0.883,267,0.883,268,1.548,269,0.725,270,0.883,271,0.883,272,0.883,273,0.883,274,0.883,275,1.548,276,0.883,277,0.883,278,0.883,279,0.883,280,2.067,281,0.883,282,0.883,283,0.883,284,0.883,285,0.883,286,0.883,287,0.883,288,1.548,289,0.883,290,0.883,291,1.548,292,2.484,293,0.883,294,0.883,295,1.697,296,0.883,297,0.883,298,0.883,299,0.883,300,0.883,301,0.883,302,0.883,303,0.883,304,0.006,305,0.011,306,0.006]],["title/interfaces/ActionAbstractComponentImpl.html",[202,0.611,307,0.199]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.792,3,0.549,4,0.478,5,0.478,6,0.287,7,0.478,9,0.625,10,1.502,11,0.503,19,1.57,20,1.57,21,1.675,22,1.939,24,1.414,27,0.042,28,0.785,31,0.893,32,1.022,35,2.481,36,0.792,37,1.096,40,0.885,41,2.531,43,0.706,51,1.755,52,0.411,64,1.502,74,0.348,75,1.384,99,0.807,102,3.03,114,0.944,152,1.216,157,1.744,160,2.162,169,1.414,192,0.549,202,0.911,203,0.792,204,0.706,208,1.216,214,1.132,254,1.675,304,0.023,305,0.03,306,0.023,307,0.383,308,0.885,309,2.119,310,3.661,311,1.142,312,3.128,313,3.128,314,3.03,315,1.57,316,1.502,317,2.835,318,1.566,319,2.119,320,1.096,321,2.423,322,2.423,323,2.423,324,2.119]],["title/interfaces/ActionAbstractEvent.html",[203,0.685,307,0.199]],["body/interfaces/ActionAbstractEvent.html",[0,0.791,3,0.549,4,0.478,5,0.478,6,0.287,7,0.478,9,0.624,10,1.5,11,0.501,19,1.569,20,1.569,21,1.672,22,1.937,24,1.413,27,0.042,28,0.785,31,0.806,32,1.021,35,2.405,36,1.021,37,1.413,40,1.141,41,2.16,43,0.91,51,1.565,52,0.411,64,1.5,74,0.347,75,1.383,99,0.806,102,3.028,114,0.944,152,1.569,157,1.349,160,2.16,169,1.413,192,0.549,202,0.704,203,1.021,204,0.704,208,1.569,214,1.131,254,2.16,304,0.023,305,0.03,306,0.023,307,0.383,308,0.884,309,2.116,310,3.125,311,0.884,312,2.419,313,2.419,314,2.733,315,1.837,316,1.5,317,2.834,318,1.754,319,2.733,320,1.413,321,3.125,322,3.125,323,3.125,324,2.733]],["title/interfaces/ActionAbstractOptions.html",[204,0.611,307,0.199]],["body/interfaces/ActionAbstractOptions.html",[0,0.99,3,0.523,4,0.455,5,0.455,6,0.273,7,0.455,9,0.595,10,1.878,11,0.5,19,1.923,20,1.923,21,2.094,22,2.374,24,1.624,27,0.042,28,0.767,31,0.873,32,0.99,35,2.374,36,0.754,37,1.043,40,0.843,41,2.094,43,0.672,51,1.53,52,0.61,64,2.227,74,0.331,75,1.363,99,0.927,102,2.65,114,1.077,152,1.158,157,1.286,160,2.647,169,1.732,192,0.523,202,0.672,203,0.754,204,0.882,208,1.158,214,0.99,254,1.595,304,0.022,305,0.029,306,0.022,307,0.37,308,0.843,309,2.018,310,3.03,311,0.843,312,2.307,313,2.307,314,2.65,315,1.521,316,1.43,317,3.068,318,1.53,319,2.018,320,1.043,321,2.307,322,2.307,323,2.307,324,2.018]],["title/classes/ActionButton.html",[0,0.685,325,0.948]],["body/classes/ActionButton.html",[0,0.842,1,2.044,2,0.792,3,0.26,4,0.226,5,0.226,6,0.333,7,0.226,9,0.725,10,0.711,11,0.481,17,2.263,18,0.888,19,1.861,20,1.759,21,2.068,22,2.017,23,1.003,24,1.515,25,1.996,26,2.52,27,0.042,28,0.26,30,0.914,31,0.886,32,0.595,34,1.003,35,1.403,36,1.145,37,1.798,38,3.619,39,1.82,40,0.419,41,0.792,42,2.458,43,0.871,48,1.146,49,1.82,51,1.636,52,0.646,53,1.82,54,1.323,56,1.339,57,0.888,59,1.146,61,1.146,62,1.146,63,1.146,64,1.854,65,1.146,67,1.592,68,3.565,70,1.339,71,0.711,74,0.164,75,1.41,76,2.52,77,1.128,78,2.577,79,2.577,80,1.979,81,2.577,82,2.577,83,2.263,84,2.263,85,2.263,86,2.263,87,2.577,88,2.263,89,2.263,90,2.263,91,2.263,92,2.263,93,2.263,94,2.263,95,1.82,96,1.82,97,1.82,98,2.81,99,0.809,100,2.814,103,0.639,104,1.41,109,1.003,111,0.639,112,1.781,113,1.597,114,0.772,115,0.888,117,1.82,118,1.82,119,0.823,120,1.136,121,1.146,122,2.263,123,2.577,124,2.263,125,0.888,126,1.146,128,3.136,129,3.504,133,1.003,134,1.996,137,2.263,139,2.458,140,1.82,141,1.82,144,1.979,145,1.146,147,1.82,148,1.82,151,2.7,152,1.294,153,1.592,154,1.146,155,1.003,156,1.003,157,0.639,158,1.003,160,2.068,162,1.146,163,0.466,166,1.146,167,1.82,169,1.708,170,2.429,171,1.944,172,1.146,174,1.146,179,1.146,181,1.146,183,2.263,184,1.146,186,1.146,188,1.146,191,1.146,192,0.637,193,0.639,196,1.003,201,1.146,209,2.429,229,1.258,269,2.125,304,0.011,305,0.018,306,0.011,320,1.023,325,1.584,326,1.567,327,1.146,328,2.589,329,2.374,330,3.009,331,2.589,332,2.589,333,1.567,334,1.631,335,2.125,336,1.631,337,1.82,338,1.631,339,2.589,340,4.705,341,1.339,342,1.339,343,1.339,344,1.339,345,1.339,346,1.339,347,1.339,348,1.339,349,1.631,350,2.125,351,1.82,352,2.125,353,2.589,354,1.339,355,1.339,356,1.339,357,1.339,358,1.339,359,1.339,360,1.339,361,1.339,362,1.339,363,1.339,364,1.339,365,1.339,366,1.339,367,1.339,368,1.339,369,1.339,370,1.339,371,1.339,372,1.339,373,1.339,374,1.339,375,1.339,376,1.146,377,1.339,378,0.792,379,0.888,380,1.146,381,2.263,382,1.339,383,1.339,384,1.339,385,1.339]],["title/interfaces/ActionButtonEvent.html",[307,0.199,379,1.625]],["body/interfaces/ActionButtonEvent.html",[3,0.592,4,0.515,5,0.515,6,0.309,7,0.515,9,0.673,11,0.469,27,0.042,28,0.853,30,1.8,31,0.673,32,1.172,36,1.23,37,1.18,40,1.198,43,0.76,52,0.638,74,0.374,75,1.198,99,0.846,114,0.673,119,1.18,120,1.31,192,0.744,202,0.955,203,1.172,204,0.955,205,1.31,214,1.072,304,0.025,305,0.032,306,0.025,307,0.357,308,0.953,311,0.953,318,1.753,320,1.483,325,1.877,326,1.455,329,1.804,333,1.455,378,1.804,379,2.778,386,2.282,387,2.267,388,2.267,389,2.267,390,2.021,391,2.021,392,2.223,393,3.279,394,2.021,395,1.804,396,2.282,397,2.282,398,2.282]],["title/interfaces/ActionButtonOptions.html",[307,0.199,333,1.169]],["body/interfaces/ActionButtonOptions.html",[3,0.585,4,0.509,5,0.509,6,0.306,7,0.509,9,0.665,11,0.423,27,0.042,28,0.85,30,1.791,31,0.84,32,1.225,36,1.225,37,1.472,40,1.368,43,0.751,52,0.636,74,0.37,75,1.189,99,0.966,114,0.966,119,1.167,120,1.635,192,0.738,202,0.948,203,1.064,204,1.039,205,1.295,214,0.843,304,0.025,305,0.032,306,0.025,307,0.338,308,0.942,311,0.942,318,1.613,320,1.167,325,1.832,326,1.438,329,1.783,333,1.815,378,1.783,379,2.522,386,2.257,387,1.783,388,1.783,389,1.783,390,1.998,391,1.998,392,2.483,393,3.747,394,1.998,395,2.251,396,2.848,397,2.848,398,2.848]],["title/interfaces/ActionGroupEvent.html",[307,0.199,399,1.834]],["body/interfaces/ActionGroupEvent.html",[3,0.591,4,0.514,5,0.514,6,0.309,7,0.514,9,0.672,11,0.476,27,0.042,28,0.813,30,1.799,31,0.672,32,1.171,36,1.071,40,1.196,43,0.759,52,0.608,74,0.374,75,1.309,99,0.845,114,0.672,119,1.178,120,1.308,163,1.678,169,1.481,170,2.018,171,1.615,192,0.813,202,0.954,203,1.171,204,0.954,205,1.308,206,1.452,207,2.265,208,1.308,214,1.071,304,0.025,305,0.032,306,0.025,307,0.356,308,0.951,311,0.951,315,1.308,316,1.615,318,1.7,320,1.481,387,2.265,388,2.265,389,2.265,395,1.801,399,2.865,400,2.279,401,2.018,402,1.615,403,2.605,404,3.042,405,2.865,406,3.042,407,3.042,408,3.042,409,2.865]],["title/interfaces/ActionGroupOptions.html",[307,0.199,402,1.3]],["body/interfaces/ActionGroupOptions.html",[3,0.573,4,0.499,5,0.499,6,0.299,7,0.499,9,0.652,11,0.441,27,0.042,28,0.801,30,1.774,31,0.829,32,1.215,36,0.826,40,1.358,43,0.736,52,0.631,74,0.362,75,1.29,99,0.959,114,0.959,119,1.142,120,1.613,163,1.622,169,1.736,170,2.489,171,1.992,192,0.801,202,0.936,203,1.05,204,1.029,205,1.269,206,1.409,207,2.442,208,1.613,214,0.826,304,0.024,305,0.031,306,0.024,307,0.335,308,0.923,311,0.923,315,1.269,316,1.566,318,1.453,320,1.142,387,1.747,388,1.747,389,1.747,395,2.221,399,2.21,400,2.21,401,1.957,402,1.992,403,3.213,404,3.752,405,3.432,406,4.126,407,3.752,408,3.752,409,3.432]],["title/interfaces/ActionOutlet.html",[307,0.199,410,1.625]],["body/interfaces/ActionOutlet.html",[1,1.365,2,1.88,3,0.446,4,0.388,5,0.388,6,0.399,7,0.537,9,0.868,11,0.459,18,2.106,27,0.042,28,0.617,31,0.701,34,3.339,51,1.896,52,0.695,54,1.486,71,2.265,74,0.282,77,1.686,99,1.064,100,2.155,103,2.308,104,2.83,112,2.155,113,1.933,114,0.804,115,2.83,151,2.155,163,1.612,192,0.879,193,1.096,203,0.642,204,0.572,205,0.987,206,1.516,207,1.359,214,1.194,229,2.526,304,0.019,305,0.026,306,0.019,307,0.295,308,0.718,315,1.365,325,1.752,326,1.516,329,1.359,333,1.876,378,1.359,380,1.965,401,1.522,402,2.086,410,2.606,411,1.965,412,3.176,413,2.378,414,3.176,415,3.176,416,3.176,417,3.176,418,2.796,419,4.668,420,3.176,421,2.796,422,3.176,423,1.876,424,2.796,425,1.752,426,2.295,427,1.359,428,1.516,429,1.965,430,1.359,431,2.295,432,1.965,433,2.295]],["title/directives/ActionOutletDirective.html",[111,1.169,434,1.834]],["body/directives/ActionOutletDirective.html",[0,0.827,1,1.048,3,0.31,4,0.27,5,0.27,6,0.397,7,0.412,9,0.653,11,0.499,18,2.364,19,1.423,20,1.423,24,0.618,25,1.616,26,2.195,27,0.042,28,0.31,31,0.352,35,1.294,43,1.108,51,1.832,52,0.623,54,1.241,57,1.961,71,1.892,74,0.196,76,2.364,77,1.294,80,1.195,100,2.224,103,0.762,105,3.309,109,1.825,111,1.163,112,1.75,113,1.569,114,0.653,125,1.961,134,1.616,139,1.825,144,2.478,151,1.75,152,1.615,153,3.018,155,1.825,157,1.411,158,3.434,163,1.361,171,1.294,192,0.642,193,0.762,195,1.596,202,0.398,205,0.686,207,1.443,208,1.423,209,1.616,211,1.616,214,1.051,216,2.437,217,2.437,219,2.956,229,1.959,254,0.945,255,1.596,295,3.309,304,0.013,305,0.02,306,0.013,311,0.762,314,3.093,315,1.732,316,0.847,319,1.825,325,1.513,329,1.443,351,2.833,392,1.294,394,1.616,405,1.825,410,2.673,412,2.437,425,0.944,430,1.443,434,2.927,435,1.944,436,1.596,437,2.968,438,2.968,439,2.968,440,2.968,441,4.341,442,2.968,443,2.968,444,3.601,445,5.03,446,3.757,447,2.968,448,2.968,449,2.437,450,2.968,451,2.968,452,2.437,453,3.601,454,1.944,455,2.968,456,2.968,457,2.968,458,3.601,459,2.968,460,1.944,461,4.76,462,4.909,463,1.944,464,2.437,465,2.968,466,2.968,467,2.968,468,2.968,469,2.968,470,2.968,471,3.601,472,2.956,473,4.03,474,3.601,475,4.03,476,2.956,477,3.601,478,3.601,479,3.601,480,3.601,481,1.944,482,2.968,483,2.968,484,2.437,485,2.968,486,2.968,487,2.968,488,1.944,489,4.341,490,4.03,491,2.968,492,2.968,493,1.944,494,1.944,495,2.968,496,1.944,497,3.601,498,1.944,499,4.576,500,4.03,501,2.968,502,1.944,503,1.944,504,1.944,505,1.944,506,1.944,507,1.944,508,1.944,509,1.944,510,1.944,511,1.944,512,1.944,513,1.944,514,2.968,515,1.944,516,1.944,517,1.944,518,1.944,519,1.944,520,1.944,521,1.944]],["title/injectables/ActionOutletFactory.html",[413,1.834,522,1.834]],["body/injectables/ActionOutletFactory.html",[0,0.526,3,0.365,4,0.317,5,0.317,6,0.364,9,0.793,11,0.438,19,1.819,20,1.543,25,2.806,26,2.91,27,0.042,28,0.365,51,1.874,52,0.66,54,1.549,67,2.441,71,2.291,74,0.231,77,1.461,99,1.037,100,1.929,103,2.242,104,2.806,112,1.929,113,1.73,114,0.72,115,2.648,151,1.929,156,2.062,163,1.503,192,0.821,193,0.897,206,1.314,207,1.929,208,1.183,209,2.91,211,2.38,214,1.117,229,2.363,304,0.016,305,0.023,306,0.016,316,0.997,325,1.722,326,1.314,329,1.929,330,2.753,333,1.713,378,1.112,380,1.608,392,1.461,401,1.246,402,1.905,409,2.062,410,1.826,413,2.687,414,3.258,415,3.258,416,3.258,417,2.753,419,4.498,420,2.753,422,2.753,423,1.713,425,1.671,426,1.878,427,1.112,428,1.314,429,1.608,430,1.929,432,2.357,446,2.753,449,2.753,452,1.878,472,2.753,522,2.062,523,2.288,524,1.878,525,3.353,526,3.353,527,3.353,528,3.353,529,2.753,530,3.353,531,2.357,532,3.353,533,4.371,534,3.353,535,3.353,536,3.353,537,3.353,538,2.288,539,3.353,540,2.288,541,3.353,542,2.288,543,3.353,544,1.826,545,2.288,546,2.288,547,2.288,548,2.288,549,2.288]],["title/modules/ActionOutletModule.html",[550,2.097,551,1.834]],["body/modules/ActionOutletModule.html",[0,0.958,3,0.665,4,0.579,5,0.579,6,0.347,11,0.347,27,0.041,28,0.665,111,2.36,192,0.856,193,1.634,304,0.028,305,0.034,306,0.028,550,2.931,551,3.599,552,2.931,553,2.564,554,3.423,555,4.41,556,3.423,557,3.423,558,4.41,559,3.423,560,3.423,561,3.423,562,4.113,563,3.423,564,2.564,565,4.17,566,5.011,567,5.011,568,3.423,569,4.17,570,4.17]],["title/classes/ActionToggle.html",[0,0.685,425,0.948]],["body/classes/ActionToggle.html",[0,0.766,1,2.007,2,0.673,3,0.221,4,0.192,5,0.192,6,0.376,7,0.192,9,0.667,10,0.604,11,0.476,17,2.027,18,1.57,19,1.677,20,1.677,21,1.92,22,1.898,23,0.852,24,1.593,25,2.729,26,2.8,27,0.042,28,0.221,30,0.801,31,0.841,32,0.521,34,0.852,35,1.256,36,1.036,37,1.756,38,3.469,39,1.595,40,0.356,41,0.673,42,0.852,43,0.753,48,0.974,49,1.595,51,1.569,52,0.626,53,1.595,54,1.245,57,1.57,59,0.974,61,0.974,62,0.974,63,0.974,64,1.722,65,0.974,67,2.262,68,3.169,71,1.603,74,0.14,75,1.369,76,2.371,77,0.989,78,2.343,79,2.343,80,1.773,81,2.343,82,2.343,83,2.027,84,2.027,85,2.027,86,2.027,87,2.343,88,2.027,89,2.027,90,2.027,91,2.027,92,2.027,93,2.027,94,2.027,95,1.595,96,1.595,97,1.595,98,2.586,99,0.756,100,2.791,103,0.543,104,1.236,109,0.852,111,0.543,112,1.62,113,1.453,114,0.716,115,0.754,117,1.595,118,2.027,119,0.721,120,1.018,121,0.974,122,2.027,123,2.343,124,2.027,125,1.57,126,0.974,128,2.933,129,3.34,133,0.852,134,1.815,137,2.027,139,2.677,140,1.595,141,2.777,144,2.565,145,0.974,147,1.595,148,1.595,151,2.708,152,1.177,153,1.395,154,0.974,155,0.852,156,0.852,157,0.543,158,0.852,160,1.92,162,0.974,163,0.396,166,0.974,167,1.595,169,1.748,170,2.587,171,2.07,172,0.974,174,0.974,179,0.974,181,0.974,183,1.595,184,0.974,186,0.974,188,0.974,191,0.974,192,0.586,193,0.543,194,2.367,196,0.852,201,0.974,209,2.587,211,2.151,229,1.103,304,0.009,305,0.015,306,0.009,335,1.863,337,1.595,340,4.61,341,1.137,342,1.137,343,1.137,344,1.137,345,1.137,346,1.137,347,1.137,348,1.137,350,1.863,351,1.595,352,1.863,354,1.137,355,1.137,356,1.137,357,1.137,358,1.137,359,1.137,360,1.137,361,1.137,362,1.137,363,1.137,364,1.137,365,1.137,366,1.137,367,1.137,368,1.137,369,1.137,370,1.137,371,1.137,372,1.137,373,1.137,374,1.137,375,1.137,376,0.974,377,1.137,382,1.137,383,1.137,384,1.137,385,1.137,423,1.442,425,1.51,427,0.673,428,1.767,429,0.974,430,2.357,464,1.863,544,2.945,571,0.974,572,2.27,573,2.27,574,2.27,575,2.27,576,2.27,577,3.02,578,4.172,579,4.354,580,3.678,581,1.385,582,1.385,583,1.385,584,1.385,585,3.334,586,3.334,587,3.334,588,3.334,589,2.27,590,1.385,591,2.27,592,1.385,593,3.334,594,2.27,595,1.385,596,2.27,597,1.385,598,2.27,599,0.754,600,2.027,601,1.385,602,1.385,603,1.385,604,1.385,605,1.385,606,1.385,607,1.385,608,1.385,609,2.27]],["title/interfaces/ActionToggleEvent.html",[307,0.199,599,1.625]],["body/interfaces/ActionToggleEvent.html",[3,0.563,4,0.49,5,0.49,6,0.294,7,0.49,9,0.641,11,0.477,24,1.585,27,0.042,28,0.838,30,1.76,31,0.641,32,1.145,36,1.207,37,1.123,40,1.161,43,0.723,52,0.648,54,1.293,74,0.356,75,1.349,99,0.82,114,0.82,119,1.123,120,1.247,169,1.67,192,0.721,202,0.925,203,1.145,204,0.925,205,1.247,214,1.039,304,0.024,305,0.031,306,0.024,307,0.35,308,0.907,311,0.907,317,1.924,318,1.727,320,1.437,387,2.197,388,2.197,389,2.197,390,1.924,391,1.924,392,2.173,394,1.924,395,1.717,396,2.172,397,2.172,398,2.172,423,1.385,425,1.863,427,1.717,428,1.385,430,1.717,544,3.115,599,2.715,610,2.172,611,3.178]],["title/interfaces/ActionToggleOptions.html",[307,0.199,423,1.169]],["body/interfaces/ActionToggleOptions.html",[3,0.555,4,0.483,5,0.483,6,0.29,7,0.483,9,0.632,11,0.436,24,1.574,27,0.042,28,0.833,30,1.748,31,0.812,32,1.201,36,1.201,37,1.424,40,1.342,43,0.713,52,0.645,54,0.996,74,0.351,75,1.342,99,0.948,114,1.034,119,1.107,120,1.581,169,1.662,192,0.714,202,0.917,203,1.029,204,1.014,205,1.23,214,0.8,304,0.024,305,0.03,306,0.024,307,0.33,308,0.894,311,0.894,317,2.44,318,1.574,320,1.107,387,1.693,388,1.693,389,1.693,390,1.897,391,1.897,392,2.454,394,1.897,395,2.177,396,2.755,397,2.755,398,2.755,423,1.756,425,1.813,427,1.693,428,1.365,430,1.693,544,3.106,599,2.44,610,2.142,611,3.675]],["title/coverage.html",[612,3.32]],["body/coverage.html",[0,1.202,1,1.231,5,0.484,6,0.504,7,0.751,8,2.758,27,0.041,52,0.416,54,0.998,111,1.367,163,0.998,202,0.714,203,0.802,204,0.714,206,2.121,210,2.453,304,0.024,305,0.031,306,0.024,307,0.387,309,3.047,325,1.109,326,2.05,327,3.153,333,1.367,379,1.9,381,2.453,386,2.758,399,2.145,400,2.758,402,1.521,410,1.9,411,2.453,413,2.145,423,1.367,425,1.109,428,2.05,434,2.145,436,2.864,522,2.145,524,2.864,571,3.153,599,1.9,600,2.453,610,2.758,612,2.864,613,2.453,614,3.489,615,3.489,616,6.046,617,5.411,618,4.485,619,3.489,620,5.411,621,5.411,622,3.489,623,4.956,624,4.069,625,3.489,626,2.864,627,2.864,628,4.485,629,3.489,630,3.489,631,3.489]],["title/dependencies.html",[553,2.202,632,2.505]],["body/dependencies.html",[27,0.042,193,1.674,196,2.627,304,0.029,305,0.035,306,0.029,553,2.627,568,3.507,633,4.272,634,5.965,635,4.272,636,5.084,637,4.272,638,4.272,639,4.272,640,4.272,641,5.084,642,4.173,643,4.272,644,4.272,645,4.272,646,4.272,647,4.272,648,4.272,649,4.272,650,4.272,651,4.272,652,4.272,653,4.272,654,4.272,655,4.272,656,4.272]],["title/miscellaneous/enumerations.html",[657,1.217,658,2.939]],["body/miscellaneous/enumerations.html",[6,0.383,7,0.637,8,3.261,11,0.383,23,3.261,24,1.46,27,0.036,74,0.463,133,3.261,134,2.888,213,4.354,304,0.031,305,0.036,306,0.031,657,2.232,658,3.77,659,3.229]],["title/index.html",[74,0.253,660,2.056,661,2.056]],["body/index.html",[2,1.862,4,0.532,27,0.041,32,0.88,47,3.145,51,1.645,54,1.096,77,1.67,113,1.67,125,2.086,157,2.121,304,0.026,305,0.032,306,0.026,308,0.984,311,1.222,324,2.356,476,3.145,484,3.145,529,3.145,531,3.638,564,2.356,577,3.145,613,2.693,662,5.175,663,5.175,664,3.831,665,5.175,666,3.831,667,5.175,668,3.831,669,3.831,670,3.831,671,4.758,672,3.831,673,3.831,674,3.831,675,4.758,676,5.175,677,5.566,678,3.831,679,3.831,680,3.831,681,3.831,682,3.831,683,3.831,684,3.145,685,3.831,686,5.175,687,3.831,688,5.566,689,3.831,690,3.831,691,3.831,692,3.831,693,3.831,694,3.831,695,3.831,696,3.831,697,5.175,698,3.831,699,3.831,700,3.831,701,3.831,702,3.831,703,3.831,704,3.145,705,3.831,706,3.831,707,3.831,708,3.831,709,3.831,710,3.831,711,4.758]],["title/license.html",[660,2.056,661,2.056,712,2.056]],["body/license.html",[11,0.332,27,0.033,42,2.451,152,1.407,171,1.737,304,0.027,305,0.033,306,0.027,318,1.267,337,2.802,376,2.802,531,3.428,564,2.451,613,2.802,684,3.273,712,3.273,713,3.986,714,5.267,715,3.986,716,3.986,717,3.986,718,3.986,719,4.876,720,3.986,721,3.986,722,3.986,723,3.986,724,3.986,725,3.986,726,4.876,727,5.899,728,3.986,729,3.986,730,5.267,731,3.986,732,4.876,733,3.986,734,3.986,735,3.986,736,3.986,737,3.986,738,3.986,739,3.986,740,3.986,741,4.876,742,3.986,743,3.986,744,3.986,745,3.986,746,3.986,747,4.876,748,4.876,749,3.986,750,3.986,751,3.986,752,3.986,753,3.986,754,3.986,755,3.986,756,3.986,757,3.986,758,3.986,759,3.986,760,3.986,761,3.986,762,3.986,763,3.986,764,3.986,765,3.986,766,3.986,767,3.986,768,3.986,769,3.986,770,3.986,771,3.986,772,3.986,773,3.986,774,3.986]],["title/modules.html",[552,2.843]],["body/modules.html",[27,0.037,304,0.032,305,0.037,306,0.032,551,2.894,552,3.309,642,3.864,775,4.707,776,4.707,777,4.707]],["title/overview.html",[778,3.32]],["body/overview.html",[2,2.141,27,0.039,111,2.319,304,0.03,305,0.035,306,0.03,308,1.131,434,2.709,522,2.709,550,3.639,551,3.557,553,2.709,554,3.616,555,3.616,556,3.616,557,3.616,558,3.616,559,3.616,560,3.616,561,3.616,562,4.25,563,3.616,564,2.709,778,3.616,779,5.498,780,4.405,781,4.405]],["title/miscellaneous/typealiases.html",[657,1.217,782,3.581]],["body/miscellaneous/typealiases.html",[1,1.443,6,0.461,11,0.341,27,0.034,31,0.741,36,1.137,43,1.09,52,0.687,74,0.412,103,1.602,119,1.693,163,1.169,202,1.09,206,1.602,304,0.028,305,0.034,306,0.028,311,1.367,315,1.879,325,1.573,326,1.602,378,2.406,386,3.274,390,2.696,391,2.696,392,2.157,393,3.48,400,3.044,401,2.696,411,3.48,425,1.573,427,2.406,428,1.602,431,3.355,432,2.873,433,3.355,610,3.274,611,3.48,657,1.986,659,4.05,704,4.064,783,4.087]],["title/miscellaneous/variables.html",[657,1.217,784,2.939]],["body/miscellaneous/variables.html",[1,1.321,6,0.447,7,0.519,8,2.883,10,2.339,11,0.447,15,3.073,16,3.073,19,1.321,20,1.321,22,1.631,27,0.042,52,0.64,54,1.07,57,2.788,64,1.631,71,1.631,74,0.377,76,2.923,99,1.049,103,2.288,152,1.894,163,1.07,204,0.766,206,1.467,208,1.655,210,3.296,211,2.038,254,2.686,304,0.025,305,0.032,306,0.025,315,1.321,325,1.19,326,1.467,327,3.296,333,1.467,381,3.296,402,1.631,403,2.631,405,2.883,409,2.301,423,1.467,425,1.19,428,1.467,544,2.038,571,3.296,600,3.296,624,4.204,626,3.849,627,4.204,657,1.819,659,3.886,784,3.073,785,3.743,786,3.743]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.9.0",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":779,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":781,"title":{},"body":{"overview.html":{}}}],["100",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["2.0.8",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":716,"title":{},"body":{"license.html":{}}}],["3.0.1",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":780,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["5.0.9",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["58/58",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["6.4.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["7.2.13",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["_setparent(parent",{"_index":294,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["_unsetparent",{"_index":301,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["above",{"_index":746,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":31,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":205,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.ts",{"_index":309,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.ts",{"_index":8,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract.ts:105",{"_index":130,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:111",{"_index":116,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:165",{"_index":101,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:205",{"_index":190,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:257",{"_index":138,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:270",{"_index":142,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:283",{"_index":143,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:292",{"_index":168,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:299",{"_index":178,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:306",{"_index":173,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:315",{"_index":185,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:323",{"_index":164,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:332",{"_index":182,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:340",{"_index":159,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:347",{"_index":189,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:355",{"_index":165,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:365",{"_index":187,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:373",{"_index":180,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:380",{"_index":177,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:387",{"_index":149,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:395",{"_index":146,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:403",{"_index":175,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:410",{"_index":176,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:419",{"_index":150,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:426",{"_index":161,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:81",{"_index":135,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:85",{"_index":131,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:90",{"_index":136,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:94",{"_index":127,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:99",{"_index":132,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract/action",{"_index":7,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractaction",{"_index":444,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accessors",{"_index":459,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingly",{"_index":479,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":11,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcomponent",{"_index":520,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":1,"title":{"classes/ActionAbstract.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstract:105",{"_index":344,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:111",{"_index":341,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:165",{"_index":342,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:205",{"_index":375,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:257",{"_index":354,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:270",{"_index":355,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:283",{"_index":356,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:292",{"_index":364,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:299",{"_index":369,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:306",{"_index":365,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:315",{"_index":372,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:323",{"_index":362,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:332",{"_index":371,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:340",{"_index":360,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:347",{"_index":374,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:355",{"_index":363,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:365",{"_index":373,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:373",{"_index":370,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:380",{"_index":368,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:387",{"_index":358,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:395",{"_index":357,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:403",{"_index":366,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:410",{"_index":367,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:419",{"_index":359,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:426",{"_index":361,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:81",{"_index":347,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:85",{"_index":345,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:90",{"_index":348,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:94",{"_index":343,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:99",{"_index":346,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstractcomponentimpl",{"_index":202,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractevent",{"_index":203,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractoptions",{"_index":204,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionbutton",{"_index":325,"title":{"classes/ActionButton.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(options",{"_index":547,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":393,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":378,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonevent",{"_index":379,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonoptions",{"_index":333,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actioncustom",{"_index":29,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actioncustomoptions",{"_index":50,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actionfactory.createbutton",{"_index":331,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createbutton().settitle('test",{"_index":332,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createtoggle",{"_index":575,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actionfactory.createtoggle().check",{"_index":576,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actiongroup",{"_index":163,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(options",{"_index":548,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":401,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupevent",{"_index":399,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupoptions",{"_index":402,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":410,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["actionoutlet(action",{"_index":498,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":458,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirective",{"_index":111,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactory",{"_index":413,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["actionoutletmodule",{"_index":551,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":208,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["actionstate",{"_index":213,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/enumerations.html":{}}}],["actionstate.active",{"_index":172,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.destroyed",{"_index":174,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.inactive",{"_index":179,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actiontoggle",{"_index":425,"title":{"classes/ActionToggle.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(options",{"_index":549,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":611,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":427,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleevent",{"_index":599,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleoptions",{"_index":423,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":78,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["active",{"_index":23,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["again",{"_index":270,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["aliases",{"_index":783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":141,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["always",{"_index":443,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["and/or",{"_index":739,"title":{},"body":{"license.html":{}}}],["angular",{"_index":157,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["angular/animations",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":568,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":193,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["anyaction",{"_index":315,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":682,"title":{},"body":{"index.html":{}}}],["application",{"_index":708,"title":{},"body":{"index.html":{}}}],["approach",{"_index":532,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["architecture",{"_index":670,"title":{},"body":{"index.html":{}}}],["arising",{"_index":772,"title":{},"body":{"license.html":{}}}],["array",{"_index":403,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":689,"title":{},"body":{"index.html":{}}}],["assets",{"_index":709,"title":{},"body":{"index.html":{}}}],["assign",{"_index":108,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["assigned",{"_index":490,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associated",{"_index":728,"title":{},"body":{"license.html":{}}}],["attaches",{"_index":440,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["authors",{"_index":763,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":484,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["back",{"_index":272,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["basic",{"_index":328,"title":{},"body":{"classes/ActionButton.html":{}}}],["behaviors",{"_index":14,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject",{"_index":194,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionToggle.html":{}}}],["behaviorsubject(actionstate.inactive",{"_index":241,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(disabled",{"_index":239,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(icon",{"_index":235,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(this.options.checked",{"_index":601,"title":{},"body":{"classes/ActionToggle.html":{}}}],["behaviorsubject(title",{"_index":233,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(visible",{"_index":237,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["belongs",{"_index":226,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["between",{"_index":16,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":169,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":556,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["bridge",{"_index":44,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["browse",{"_index":777,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":642,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":688,"title":{},"body":{"index.html":{}}}],["button",{"_index":329,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model",{"_index":380,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.ts",{"_index":386,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.trigger",{"_index":353,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts",{"_index":327,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.ts:39",{"_index":338,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:44",{"_index":336,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:49",{"_index":334,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:87",{"_index":349,"title":{},"body":{"classes/ActionButton.html":{}}}],["button/action",{"_index":326,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonaction",{"_index":533,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":715,"title":{},"body":{"license.html":{}}}],["callback",{"_index":392,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":449,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["called",{"_index":350,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["change",{"_index":125,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["change/update",{"_index":478,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["changes",{"_index":38,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["charge",{"_index":723,"title":{},"body":{"license.html":{}}}],["check",{"_index":577,"title":{},"body":{"classes/ActionToggle.html":{},"index.html":{}}}],["checkbox",{"_index":573,"title":{},"body":{"classes/ActionToggle.html":{}}}],["checked",{"_index":544,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":319,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":405,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":766,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":530,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":516,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["cli",{"_index":667,"title":{},"body":{"index.html":{}}}],["click",{"_index":352,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["cluster_actionoutletmodule",{"_index":559,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declarations",{"_index":560,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_exports",{"_index":561,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":529,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["combination",{"_index":191,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["coming",{"_index":389,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["comming",{"_index":322,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["commonmodule",{"_index":567,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compile",{"_index":477,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compiles",{"_index":439,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["complete",{"_index":145,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["compodoc",{"_index":662,"title":{},"body":{"index.html":{}}}],["component",{"_index":51,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["component's",{"_index":474,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactory",{"_index":507,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":462,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":497,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["components",{"_index":311,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":745,"title":{},"body":{"license.html":{}}}],["connection",{"_index":773,"title":{},"body":{"license.html":{}}}],["console.log('hello",{"_index":706,"title":{},"body":{"index.html":{}}}],["const",{"_index":209,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["constructor(options",{"_index":49,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["constructor(private",{"_index":513,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["constructor(viewcontainerref",{"_index":460,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["container",{"_index":475,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["containing",{"_index":404,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["contract",{"_index":769,"title":{},"body":{"license.html":{}}}],["copies",{"_index":741,"title":{},"body":{"license.html":{}}}],["copy",{"_index":726,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":714,"title":{},"body":{"license.html":{}}}],["core",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":612,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":104,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["createbutton",{"_index":414,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(options",{"_index":417,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcomponent",{"_index":467,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["created",{"_index":408,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["creategroup",{"_index":415,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(options",{"_index":420,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle",{"_index":416,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(options",{"_index":422,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":216,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["current",{"_index":139,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["currently",{"_index":293,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["custom",{"_index":39,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["cycle",{"_index":257,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["damages",{"_index":767,"title":{},"body":{"license.html":{}}}],["deactivate",{"_index":79,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deal",{"_index":729,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":774,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":555,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":103,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["defaultabstractoptions",{"_index":210,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonoptions",{"_index":381,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupoptions",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleoptions",{"_index":600,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":433,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":100,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["defines",{"_index":482,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["defining",{"_index":170,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{}}}],["demo",{"_index":663,"title":{},"body":{"index.html":{}}}],["demonstrating",{"_index":668,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":553,"title":{"dependencies.html":{}},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":465,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["depending",{"_index":188,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deploy",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["derived",{"_index":35,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["desabled",{"_index":220,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["descendant",{"_index":447,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":80,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["destroyed",{"_index":134,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["destruction",{"_index":485,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detection",{"_index":480,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dev",{"_index":679,"title":{},"body":{"index.html":{}}}],["development",{"_index":674,"title":{},"body":{"index.html":{}}}],["dinamically",{"_index":441,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directive",{"_index":434,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"overview.html":{}}}],["directive/pipe/service/class/module",{"_index":687,"title":{},"body":{"index.html":{}}}],["directives",{"_index":435,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directly",{"_index":489,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directory",{"_index":692,"title":{},"body":{"index.html":{}}}],["disable",{"_index":81,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["disabled",{"_index":22,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["dist",{"_index":691,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":197,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["distribute",{"_index":737,"title":{},"body":{"license.html":{}}}],["documentating",{"_index":673,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":613,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doen",{"_index":126,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["dom",{"_index":155,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["dropdown",{"_index":409,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":18,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["each",{"_index":17,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["embedding",{"_index":671,"title":{},"body":{"index.html":{}}}],["enable",{"_index":82,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["enabled",{"_index":148,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["enum",{"_index":212,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["enumerations",{"_index":658,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illegal",{"_index":504,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":476,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["event",{"_index":318,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["example",{"_index":25,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["export",{"_index":28,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["exports",{"_index":558,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["exposed",{"_index":512,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":754,"title":{},"body":{"license.html":{}}}],["extend",{"_index":102,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["extended",{"_index":10,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["extending",{"_index":395,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["extends",{"_index":30,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["factory",{"_index":412,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["false",{"_index":57,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["false).pipe",{"_index":603,"title":{},"body":{"classes/ActionToggle.html":{}}}],["features",{"_index":669,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":491,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["files",{"_index":684,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":198,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["filter(state",{"_index":244,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["finish",{"_index":225,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fire",{"_index":36,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":537,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["firecustom",{"_index":72,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fires",{"_index":222,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["first",{"_index":397,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fitness",{"_index":759,"title":{},"body":{"license.html":{}}}],["flag",{"_index":694,"title":{},"body":{"index.html":{}}}],["fly",{"_index":442,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["following",{"_index":337,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["forced",{"_index":109,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["forcedcomponent",{"_index":218,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["free",{"_index":722,"title":{},"body":{"license.html":{}}}],["function",{"_index":704,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":526,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["functionality",{"_index":572,"title":{},"body":{"classes/ActionToggle.html":{}}}],["furnished",{"_index":744,"title":{},"body":{"license.html":{}}}],["further",{"_index":696,"title":{},"body":{"index.html":{}}}],["generate",{"_index":686,"title":{},"body":{"index.html":{}}}],["generated",{"_index":666,"title":{},"body":{"index.html":{}}}],["getactionoutlet",{"_index":493,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype",{"_index":456,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(action",{"_index":487,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getforcedcomponent",{"_index":83,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["geticon",{"_index":84,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getparent",{"_index":85,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getter",{"_index":495,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getting",{"_index":660,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":86,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["go",{"_index":698,"title":{},"body":{"index.html":{}}}],["going",{"_index":110,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["granted",{"_index":721,"title":{},"body":{"license.html":{}}}],["group",{"_index":207,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model",{"_index":426,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.ts",{"_index":400,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.ts",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/action",{"_index":206,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hammerjs",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":251,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handleactivatestate(observable",{"_index":273,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handled",{"_index":217,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["handlelivecycle(observable",{"_index":264,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handlelivecycledistinct(observable",{"_index":261,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["hello",{"_index":705,"title":{},"body":{"index.html":{}}}],["help",{"_index":697,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":720,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":137,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide",{"_index":87,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["highlighting",{"_index":702,"title":{},"body":{"index.html":{}}}],["holders",{"_index":764,"title":{},"body":{"license.html":{}}}],["holding",{"_index":118,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["home",{"_index":710,"title":{},"body":{"index.html":{}}}],["hook",{"_index":515,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["html",{"_index":451,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["http://localhost:4200",{"_index":681,"title":{},"body":{"index.html":{}}}],["icon",{"_index":20,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":672,"title":{},"body":{"index.html":{}}}],["implement",{"_index":119,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":41,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["implementations",{"_index":12,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["implemented",{"_index":34,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{}}}],["implementing",{"_index":313,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implements",{"_index":452,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["implied",{"_index":755,"title":{},"body":{"license.html":{}}}],["import",{"_index":192,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["imports",{"_index":570,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["inactive",{"_index":133,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":749,"title":{},"body":{"license.html":{}}}],["including",{"_index":732,"title":{},"body":{"license.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["inherited",{"_index":340,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["initial",{"_index":317,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initially",{"_index":407,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["injectable",{"_index":522,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":523,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["injection",{"_index":466,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector",{"_index":158,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["injector.get(action.constructor",{"_index":521,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":314,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["inputs",{"_index":457,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instance",{"_index":214,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["instanceof",{"_index":502,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instantiate",{"_index":335,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["instead",{"_index":156,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["interface",{"_index":307,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":308,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":224,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["internally",{"_index":219,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["invoked",{"_index":464,"title":{},"body":{"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["isactive",{"_index":88,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ischecked",{"_index":578,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isdestroyed",{"_index":89,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isdisabled",{"_index":90,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isenabled",{"_index":91,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ishidden",{"_index":92,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isinactive",{"_index":93,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isunchecked",{"_index":579,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isvisible",{"_index":94,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["it's",{"_index":120,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["javascript",{"_index":703,"title":{},"body":{"index.html":{}}}],["js",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":528,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":753,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":717,"title":{},"body":{"license.html":{}}}],["legend",{"_index":554,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["leverage",{"_index":107,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["liability",{"_index":768,"title":{},"body":{"license.html":{}}}],["liable",{"_index":765,"title":{},"body":{"license.html":{}}}],["license",{"_index":712,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":733,"title":{},"body":{"license.html":{}}}],["limited",{"_index":756,"title":{},"body":{"license.html":{}}}],["live",{"_index":256,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["livecycle",{"_index":221,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["manually",{"_index":486,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["map",{"_index":377,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["map(checked",{"_index":604,"title":{},"body":{"classes/ActionToggle.html":{}}}],["matches",{"_index":223,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["matching",{"_index":305,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":758,"title":{},"body":{"license.html":{}}}],["merge",{"_index":376,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["merged",{"_index":215,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["merging",{"_index":121,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["metadata",{"_index":454,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":67,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["miscellaneous",{"_index":657,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":713,"title":{},"body":{"license.html":{}}}],["modify",{"_index":735,"title":{},"body":{"license.html":{}}}],["module",{"_index":550,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["modules",{"_index":552,"title":{"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{}}}],["more",{"_index":324,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"index.html":{}}}],["name",{"_index":113,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["navigate",{"_index":680,"title":{},"body":{"index.html":{}}}],["need",{"_index":33,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["needs",{"_index":69,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["never",{"_index":195,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["new",{"_index":54,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":391,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":677,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":566,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["ngondestroy",{"_index":514,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["nide",{"_index":166,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["non",{"_index":46,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["noninfringement",{"_index":762,"title":{},"body":{"license.html":{}}}],["notice",{"_index":747,"title":{},"body":{"license.html":{}}}],["notification",{"_index":588,"title":{},"body":{"classes/ActionToggle.html":{}}}],["notifies",{"_index":128,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notify",{"_index":183,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notifying",{"_index":124,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["object.assign",{"_index":231,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["observable",{"_index":37,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["observable.pipe",{"_index":265,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["observables",{"_index":123,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["obtaining",{"_index":725,"title":{},"body":{"license.html":{}}}],["once",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":453,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["one",{"_index":446,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["optional",{"_index":114,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["options",{"_index":99,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":527,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["oservable",{"_index":387,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":718,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":771,"title":{},"body":{"license.html":{}}}],["out",{"_index":564,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlet.directive",{"_index":569,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.ts",{"_index":436,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:102",{"_index":463,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:137",{"_index":488,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":470,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:83",{"_index":494,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:91",{"_index":481,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":316,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.ts",{"_index":411,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":418,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":421,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":424,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.ts",{"_index":565,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.ts",{"_index":524,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":538,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":540,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":542,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["override",{"_index":419,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["overriden",{"_index":323,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":778,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":632,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":711,"title":{},"body":{"index.html":{}}}],["param",{"_index":229,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parent",{"_index":162,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["particular",{"_index":760,"title":{},"body":{"license.html":{}}}],["pause",{"_index":260,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["paused",{"_index":253,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["pausing",{"_index":268,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["permission",{"_index":719,"title":{},"body":{"license.html":{}}}],["permit",{"_index":742,"title":{},"body":{"license.html":{}}}],["person",{"_index":724,"title":{},"body":{"license.html":{}}}],["persons",{"_index":743,"title":{},"body":{"license.html":{}}}],["portions",{"_index":751,"title":{},"body":{"license.html":{}}}],["possible",{"_index":259,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["previously",{"_index":167,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["prevously",{"_index":147,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["private",{"_index":105,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["prod",{"_index":693,"title":{},"body":{"index.html":{}}}],["produce",{"_index":586,"title":{},"body":{"classes/ActionToggle.html":{}}}],["production",{"_index":695,"title":{},"body":{"index.html":{}}}],["project",{"_index":665,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":659,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/action",{"_index":6,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":492,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properties",{"_index":32,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["property",{"_index":117,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["protected",{"_index":48,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["provided",{"_index":152,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":545,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["providers",{"_index":557,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["provides",{"_index":13,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["providing",{"_index":472,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["public",{"_index":122,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["publish",{"_index":736,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":761,"title":{},"body":{"license.html":{}}}],["reactive",{"_index":45,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["readme",{"_index":699,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":406,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receive",{"_index":388,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["reference",{"_index":255,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["registered",{"_index":396,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["reload",{"_index":683,"title":{},"body":{"index.html":{}}}],["render",{"_index":445,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendered",{"_index":473,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendering",{"_index":438,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["renders",{"_index":227,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["represent",{"_index":154,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["reset",{"_index":563,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolve",{"_index":468,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactory",{"_index":469,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restriction",{"_index":731,"title":{},"body":{"license.html":{}}}],["result",{"_index":304,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":306,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":71,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":151,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["rights",{"_index":734,"title":{},"body":{"license.html":{}}}],["root",{"_index":546,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["run",{"_index":676,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":196,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":201,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["scaffolding",{"_index":685,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":707,"title":{},"body":{"index.html":{}}}],["second",{"_index":587,"title":{},"body":{"classes/ActionToggle.html":{}}}],["selector",{"_index":455,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":740,"title":{},"body":{"license.html":{}}}],["serve",{"_index":678,"title":{},"body":{"index.html":{}}}],["server",{"_index":675,"title":{},"body":{"index.html":{}}}],["service",{"_index":525,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":144,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["set(children",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(action",{"_index":496,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["seticon",{"_index":95,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["seticon('icon",{"_index":536,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["seticon(icon",{"_index":181,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setter",{"_index":471,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settitle",{"_index":96,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["settitle('action",{"_index":535,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle(title",{"_index":184,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility",{"_index":97,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility(visibility",{"_index":186,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["shall",{"_index":748,"title":{},"body":{"license.html":{}}}],["shared",{"_index":15,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["shere",{"_index":312,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":431,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["shouldpause",{"_index":258,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["shouldpause).pipe",{"_index":263,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["show",{"_index":98,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["slider",{"_index":574,"title":{},"body":{"classes/ActionToggle.html":{}}}],["software",{"_index":727,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["specific",{"_index":40,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["started",{"_index":661,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":24,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{}}}],["state(`active",{"_index":252,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["statements",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":585,"title":{},"body":{"classes/ActionToggle.html":{}}}],["stored",{"_index":690,"title":{},"body":{"index.html":{}}}],["string",{"_index":160,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["structural",{"_index":437,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":42,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["subjects",{"_index":106,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["sublicense",{"_index":738,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":398,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscribers",{"_index":320,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscription",{"_index":390,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":129,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["substantial",{"_index":750,"title":{},"body":{"license.html":{}}}],["super",{"_index":382,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["support",{"_index":775,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":700,"title":{},"body":{"index.html":{}}}],["svg",{"_index":776,"title":{},"body":{"modules.html":{}}}],["switches",{"_index":271,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["switchmap",{"_index":199,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["switchmap(state",{"_index":274,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["syntax",{"_index":701,"title":{},"body":{"index.html":{}}}],["table",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":200,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["takeuntil(this.finish",{"_index":266,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["template",{"_index":450,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["test",{"_index":330,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":321,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.action",{"_index":499,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activate",{"_index":511,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":519,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getparent",{"_index":518,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":539,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":541,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.createtoggle",{"_index":543,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":517,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":534,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.activate",{"_index":299,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.changes",{"_index":59,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":508,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":500,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance.action",{"_index":510,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.custom",{"_index":55,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom$.pipe(map(custom",{"_index":66,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom.next(math.random",{"_index":73,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.deactivate",{"_index":303,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disable",{"_index":297,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled",{"_index":238,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled$.pipe(map(disabled",{"_index":65,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.disabled.getvalue",{"_index":291,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(false",{"_index":289,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(true",{"_index":290,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.enable",{"_index":302,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.finish",{"_index":242,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.fire",{"_index":53,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire$.subscribe(this.options.callback",{"_index":385,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire.getvalue",{"_index":609,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next",{"_index":70,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.fire.next(!this.fire.getvalue",{"_index":606,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(false",{"_index":608,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(true",{"_index":607,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.pipe(map(checked",{"_index":605,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.forcedcomponent",{"_index":250,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.getcomponenttype(this.action",{"_index":505,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":448,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.handleactivatestate(source",{"_index":267,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(merge",{"_index":383,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.handlelivecycle(observable",{"_index":262,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(observable.merge",{"_index":60,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.custom.asobservable",{"_index":58,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.fire.asobservable",{"_index":56,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.handlelivecycledistinct(this.disabled.asobservable",{"_index":248,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.fire.asobservable",{"_index":602,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.handlelivecycledistinct(this.icon.asobservable",{"_index":246,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.title.asobservable",{"_index":245,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.visible.asobservable",{"_index":247,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon",{"_index":234,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon$.pipe(map(icon",{"_index":62,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.icon.getvalue",{"_index":284,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon.next(icon",{"_index":283,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.injector",{"_index":506,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.isdestroyed",{"_index":275,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options",{"_index":230,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options.callback",{"_index":384,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.parent",{"_index":292,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isactive",{"_index":298,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isdisabled",{"_index":296,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state",{"_index":240,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.asobservable().pipe",{"_index":249,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.complete",{"_index":279,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.getvalue",{"_index":280,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.active",{"_index":276,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.destroyed",{"_index":278,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.inactive",{"_index":277,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.pipe",{"_index":243,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title",{"_index":232,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title$.pipe(map(title",{"_index":61,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.title.getvalue",{"_index":282,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title.next(title",{"_index":281,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.viewcontainerref.clear",{"_index":501,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":509,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.visible",{"_index":236,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible$.pipe(map(visible",{"_index":63,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.visible.getvalue",{"_index":288,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(false",{"_index":286,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(true",{"_index":285,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(visibility",{"_index":287,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["throw",{"_index":503,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["title",{"_index":19,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["todomvc",{"_index":664,"title":{},"body":{"index.html":{}}}],["toggle",{"_index":430,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.check",{"_index":589,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ischecked",{"_index":591,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.isunchecked",{"_index":594,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.model",{"_index":429,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["toggle.model.ts",{"_index":610,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.trigger",{"_index":596,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts",{"_index":571,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle.ts:110",{"_index":584,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:126",{"_index":597,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:141",{"_index":590,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:155",{"_index":592,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:42",{"_index":583,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:47",{"_index":582,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:52",{"_index":581,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:94",{"_index":595,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.uncheck",{"_index":598,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle/action",{"_index":428,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":770,"title":{},"body":{"license.html":{}}}],["travis",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["trigger",{"_index":68,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["triggered",{"_index":339,"title":{},"body":{"classes/ActionButton.html":{}}}],["true",{"_index":211,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":52,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":782,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":228,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["types",{"_index":310,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["typescript",{"_index":26,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["uncheck",{"_index":580,"title":{},"body":{"classes/ActionToggle.html":{}}}],["unchecked",{"_index":593,"title":{},"body":{"classes/ActionToggle.html":{}}}],["undefined",{"_index":295,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["underlying",{"_index":483,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["unique",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":140,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["unset",{"_index":300,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["use",{"_index":531,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":43,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["value",{"_index":254,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":784,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":153,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["view",{"_index":351,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["viewcontainerref",{"_index":461,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibility",{"_index":21,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["visible",{"_index":64,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":394,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranties",{"_index":757,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":752,"title":{},"body":{"license.html":{}}}],["way",{"_index":432,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whenever",{"_index":269,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["whether",{"_index":171,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["without",{"_index":730,"title":{},"body":{"license.html":{}}}],["world",{"_index":47,"title":{},"body":{"classes/ActionAbstract.html":{},"index.html":{}}}],["yes",{"_index":115,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["zone.js",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":562,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActionAbstract.html":{"url":"classes/ActionAbstract.html","title":"class - ActionAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.ts\n        \n\n            \n                Description\n            \n            \n                ActionAbstract is extended by all action implementations\nProvides all the behaviors, shared between each action\ne.g. title, icon, visibility, disabled, active state\nExample\ntypescript\n * export class ActionCustom extends ActionAbstract {\n *     // Abstract properties need to be implemented by derived class\n *     fire$: Observable;\n *     changes$: Observable;\n *     // A custom observable, specific to this action implementation\n *     custom$: Observable;\n *\n *     // A custom subject that is used to bridge reactive and non reactive world\n *     protected custom: Subject;\n *\n *     constructor(options: ActionCustomOptions,\n *                 component?: Type) {\n *         this.fire = new Subject();\n *         this.custom = new Subject();\n *\n *         this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n *         this.custom$ = this.handleLivecycle(this.custom.asObservable());\n *         this.changes$ = this.handleLivecycle(Observable.merge(\n *             this.title$.pipe(map(title => ({ title }))),\n *             this.icon$.pipe(map(icon => ({ icon }))),\n *             this.visible$.pipe(map(visible => ({ visible }))),\n *             this.disabled$.pipe(map(disabled => ({ disabled }))),\n *             this.custom$.pipe(map(custom => ({ custom })))\n *         ));\n *     }\n *\n *     // Abstract method trigger needs to be implemented by every derived class\n *     trigger(): this {\n *         this.fire.next({ action: this });\n *         return this;\n *     }\n *\n *     // A custom method to trigger custom subject and custom$ observable\n *     fireCustom(): this {\n *         this.custom.next(Math.random());\n *         return this;\n *     }\n * }\n *\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: Options, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:165\n                            \n                        \n\n                \n                    \n                            Abstract action constructor. It will:\n- Extend default options with derived default options and custom options\n- Create all private subjects that are used to leverage reactive world with non reactive\n- Create observable for each private subject\n- Assign forced component, that is going to be used by ActionOutletDirective\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionAbstract\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:111\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:165\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:94\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:105\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:85\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:99\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:81\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:90\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:257\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:270\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:283\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:395\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:387\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:419\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :         Type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:340\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:426\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:323\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:355\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:292\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:306\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:403\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:410\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:380\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:299\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:373\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:332\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:315\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:365\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:347\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:205\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, NEVER } from 'rxjs';\nimport { distinctUntilChanged , filter, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionGroup } from '../action-group/action-group';\n\n/**\n * Default options for `ActionAbstract` - shared between **all** actions\n * Extended by provided options in action `constructor`\n */\nconst defaultAbstractOptions: ActionAbstractOptions = {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n};\n\n/**\n * The state of the action\n * Can be `Active`, `Inactive` or `Destroyed`\n */\nexport const enum ActionState {\n    Active,\n    Inactive,\n    Destroyed,\n}\n\n/**\n * `ActionAbstract` is extended by **all** action implementations\n * Provides all the behaviors, shared between **each** action\n * *e.g. title, icon, visibility, disabled, active state*\n *\n * ## Example\n *\n * ```typescript\n * export class ActionCustom extends ActionAbstract {\n *     // Abstract properties need to be implemented by derived class\n *     fire$: Observable;\n *     changes$: Observable;\n *     // A custom observable, specific to this action implementation\n *     custom$: Observable;\n *\n *     // A custom subject that is used to bridge reactive and non reactive world\n *     protected custom: Subject;\n *\n *     constructor(options: ActionCustomOptions,\n *                 component?: Type) {\n *         this.fire = new Subject();\n *         this.custom = new Subject();\n *\n *         this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n *         this.custom$ = this.handleLivecycle(this.custom.asObservable());\n *         this.changes$ = this.handleLivecycle(Observable.merge(\n *             this.title$.pipe(map(title => ({ title }))),\n *             this.icon$.pipe(map(icon => ({ icon }))),\n *             this.visible$.pipe(map(visible => ({ visible }))),\n *             this.disabled$.pipe(map(disabled => ({ disabled }))),\n *             this.custom$.pipe(map(custom => ({ custom })))\n *         ));\n *     }\n *\n *     // Abstract method trigger needs to be implemented by every derived class\n *     trigger(): this {\n *         this.fire.next({ action: this });\n *         return this;\n *     }\n *\n *     // A custom method to trigger custom subject and custom$ observable\n *     fireCustom(): this {\n *         this.custom.next(Math.random());\n *         return this;\n *     }\n * }\n * ```\n */\nexport abstract class ActionAbstract {\n    /**\n     * `Observable` that notifies subscriptions when title changes\n     */\n    readonly title$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when icon changes\n     */\n    readonly icon$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when visibility state changes\n     * (visible or hidden)\n     */\n    readonly visible$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when disabled state changes\n     */\n    readonly disabled$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when action state changes\n     * e.g. `Active`, `Inactive`, `Destroyed`\n     */\n    readonly state$: Observable;\n    /**\n     * **Abstract** property, holding `Observable`\n     * Each derived class **should** implement it's own `fire$` observable,\n     * with it's own specific implementation\n     */\n    abstract readonly fire$: Observable;\n    /**\n     * **Abstract** property, holding `Observable`\n     * Each derived class **should** implement it's own `changes$` observable,\n     * merging all public observables, notifying for every change doen to action\n     */\n    abstract readonly changes$: Observable;\n\n    /**\n     * Options of action instance\n     * **Merged** default options from derived class, default options from abstract class,\n     * and options provided on action creation to `constructor`\n     */\n    protected readonly options: Options;\n    /**\n     * `Component`, provided to action `constructor`\n     * Should be forced and used instead of component in `Injector`\n     * That is handled by `ActionOutletDirective`\n     */\n    protected readonly forcedComponent: Type;\n    /**\n     * Title `BehaviorSubject`, used **internally** to notify on title change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly title: BehaviorSubject;\n    /**\n     * Icon `BehaviorSubject`, used **internally** to notify on icon change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly icon: BehaviorSubject;\n    /**\n     * Visibility `BehaviorSubject`, used **internally** to notify on visibility state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly visible: BehaviorSubject;\n    /**\n     * Desabled state `BehaviorSubject`, used **internally** to notify on disabled state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly disabled: BehaviorSubject;\n    /**\n     * Action livecycle state `BehaviorSubject`, used **internally** to notify on action state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly state: BehaviorSubject;\n    /**\n     * `Observable` that fires, when state matches `ActionState.Destroyed`\n     * Used to complete all **internal** subjects\n     */\n    protected readonly finish: Observable;\n\n    /**\n     * Parent of current action. This is a parent action,\n     * to whom current action belongs to, and renders into\n     */\n    private parent: ActionGroup;\n\n    /**\n     * `constructor` should be `ActionAbstract`\n     */\n    ['constructor']: typeof ActionAbstract;\n\n    /**\n     * Abstract action `constructor`. It will:\n     * - **Extend** default options with derived default options and custom options\n     * - **Create** all private subjects that are used to leverage reactive world with non reactive\n     * - **Create** observable for each private subject\n     * - **Assign** forced component, that is going to be used by `ActionOutletDirective`\n     *\n     * @param options Options for `ActionAbstract`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: Options,\n                component?: Type) {\n        const { title, icon, visible, disabled } = this.options = Object.assign({}, defaultAbstractOptions, options);\n\n        this.title = new BehaviorSubject(title);\n        this.icon = new BehaviorSubject(icon);\n        this.visible = new BehaviorSubject(visible);\n        this.disabled = new BehaviorSubject(disabled);\n        this.state = new BehaviorSubject(ActionState.Inactive);\n        this.finish = this.state.pipe(\n          filter(state => state === ActionState.Destroyed)\n        );\n\n        this.title$ = this.handleLivecycleDistinct(this.title.asObservable());\n        this.icon$ = this.handleLivecycleDistinct(this.icon.asObservable());\n        this.visible$ = this.handleLivecycleDistinct(this.visible.asObservable());\n        this.disabled$ = this.handleLivecycleDistinct(this.disabled.asObservable());\n        this.state$ = this.state.asObservable().pipe(\n          distinctUntilChanged()\n        );\n\n        this.forcedComponent = component;\n    }\n\n    /**\n     * Abstract method trigger should be implemented by **each** derived class, in\n     * combination with `fire` subject and `fire$` observable\n     */\n    abstract trigger(): this;\n\n    /**\n     * Used **internally** to handle livecycle of observables\n     * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`),\n     * and will notify **only** when value or reference **changes**\n     *\n     * @param observable `Observable` to handle live cycle\n     * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n     */\n    protected handleLivecycleDistinct(observable: Observable, shouldPause?: boolean): Observable {\n        return this.handleLivecycle(observable, shouldPause).pipe(\n          distinctUntilChanged()\n        );\n    }\n\n    /**\n     * Used internally to handle livecycle of observables\n     * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`)\n     *\n     * @param observable `Observable` to handle live cycle\n     * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n     */\n    protected handleLivecycle(observable: Observable, shouldPause: boolean = true): Observable {\n        const source = observable.pipe(\n          takeUntil(this.finish)\n        );\n\n        if (!shouldPause) {\n            return source;\n        }\n\n        return this.handleActivateState(source);\n    }\n\n    /**\n     * Used **internally** to handle pausing of observables\n     * Will deactivate observable, whenever state of the action changes to `Inactive`,\n     * and will activate observable again, when it switches back to `Active`\n     *\n     * @param observable `Observable` to handle pausing\n     */\n    protected handleActivateState(observable: Observable): Observable {\n        return this.state.pipe(\n          switchMap(state => state === ActionState.Inactive ? (NEVER) : observable)\n        );\n    }\n\n    /**\n     * Will **activate** all observables in current action,\n     * **unless action is already destroyed**\n     */\n    activate(): this {\n        if (this.isDestroyed()) {\n            return this;\n        }\n\n        this.state.next(ActionState.Active);\n        return this;\n    }\n\n    /**\n     * Will **deactivate** all observables in current action,\n     * **unless action is already destroyed**\n     */\n    deactivate(): this {\n        if (this.isDestroyed()) {\n            return this;\n        }\n\n        this.state.next(ActionState.Inactive);\n        return this;\n    }\n\n    /**\n     * Will set action state to `Destroyed`, which will\n     * complete all observables\n     */\n    destroy(): this {\n        this.state.next(ActionState.Destroyed);\n        this.state.complete();\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Active`\n     */\n    isActive(): boolean {\n        return this.state.getValue() === ActionState.Active;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Inactive`\n     */\n    isInactive(): boolean {\n        return this.state.getValue() === ActionState.Inactive;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Destroyed`\n     */\n    isDestroyed(): boolean {\n        return this.state.getValue() === ActionState.Destroyed;\n    }\n\n    /**\n     * Will set the new title and notify all title subscriptions\n     *\n     * @param title The new action title\n     */\n    setTitle(title: string): this {\n        this.title.next(title);\n        return this;\n    }\n\n    /**\n     * Returns current action title\n     */\n    getTitle(): string {\n        return this.title.getValue();\n    }\n\n    /**\n     * Will set the new icon and notify all icon subscriptions\n     *\n     * @param icon The new action icon\n     */\n    setIcon(icon: string): this {\n        this.icon.next(icon);\n        return this;\n    }\n\n    /**\n     * Returns current action icon\n     */\n    getIcon(): string {\n        return this.icon.getValue();\n    }\n\n    /**\n     * Will show the action, **if previously hidden**\n     */\n    show(): this {\n        this.visible.next(true);\n        return this;\n    }\n\n    /**\n     * Will nide the action, **if previously visible**\n     */\n    hide(): this {\n        this.visible.next(false);\n        return this;\n    }\n\n    /**\n     * Will show or hide the action depending from the provided visibility boolean\n     *\n     * @param visibility The new visibility\n     */\n    setVisibility(visibility: boolean): this {\n        this.visible.next(visibility);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is visible\n     */\n    isVisible(): boolean {\n        return this.visible.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is hidden\n     */\n    isHidden(): boolean {\n        return !this.visible.getValue();\n    }\n\n    /**\n     * Will enable action, **if prevously disabled**\n     */\n    enable(): this {\n        this.disabled.next(false);\n        return this;\n    }\n\n    /**\n     * Will disable action, **if prevously enabled**\n     */\n    disable(): this {\n        this.disabled.next(true);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is disabled\n     */\n    isDisabled(): boolean {\n        return this.disabled.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is enabled\n     */\n    isEnabled(): boolean {\n        return !this.disabled.getValue();\n    }\n\n    /**\n     * Returns a `Component`, that is provided as forced component via action `constructor`\n     * This component should be used by `ActionOutletDirective`, to represent\n     * the action in DOM, instead the component, provided via Angular `Injector`\n     */\n    getForcedComponent(): Type {\n        return this.forcedComponent;\n    }\n\n    /**\n     * Returns current parent of the action\n     */\n    getParent(): ActionGroup {\n        return this.parent;\n    }\n\n    /**\n     * @internal\n     *\n     * **Internal** method to set parent of current action. It will:\n     * - **Set** parent, but only if currently not defined\n     * - **Disable** current action if parent is disabled\n     * - **Activate** current action if parent is active\n     */\n    _setParent(parent: ActionGroup): this {\n        if (this.parent === undefined) {\n            this.parent = parent;\n            if (this.parent.isDisabled()) {\n                this.disable();\n            }\n            if (this.parent.isActive()) {\n                this.activate();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @internal\n     *\n     * **Internal** method to unset parent of current action. It will:\n     * - **Set** parent to undefined\n     * - **Enable** current action\n     * - **Deactivate** current action\n     */\n    _unsetParent(): this {\n        this.parent = undefined;\n        this.enable();\n        this.deactivate();\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     Action\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    action: Action; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionButton.html":{"url":"classes/ActionButton.html","title":"class - ActionButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton used to create basic button action\nExample\ntypescript\n * const button = new ActionButton({ title: 'Test' });\n *\nOr\ntypescript\n * const button = actionFactory.createButton({ title: 'Test' });\n *\nOr\ntypescript\n * const button = actionFactory.createButton().setTitle('Test');\n *\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionButtonOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-button/action-button.ts:49\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionButton\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionButtonOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:44\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:39\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions whenever button is triggered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:111\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:165\n\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:94\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:105\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:85\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:99\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:81\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:90\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-button/action-button.ts:87\n                \n            \n\n\n            \n                \n                    Will trigger fire$ subscribers\nShould be called in view component on click\nExample:\ntypescript\n     * button.trigger();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:257\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:270\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:283\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:395\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:387\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:419\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :         Type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:340\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:426\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:323\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:355\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:292\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:306\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:403\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:410\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:380\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:299\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:373\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:332\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:315\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:365\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:347\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:205\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionButtonComponentImpl, ActionButtonEvent, ActionButtonOptions } from './action-button.model';\n\n/**\n * Default options for `ActionButton`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions: ActionButtonOptions = { };\n\n/**\n * `ActionButton` used to create basic button action\n *\n * ## Example\n *\n * ```typescript\n * const button = new ActionButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton().setTitle('Test');\n * ```\n */\nexport class ActionButton extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions whenever button is triggered\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `Subject`, used to notify subscribers on action trigger\n     */\n    protected fire: Subject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionButton`\n     *\n     * @param options Options for `ActionButton`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionButtonOptions = defaultButtonOptions,\n                component?: Type) {\n        super({ ...defaultButtonOptions, ...options }, component);\n\n        this.fire = new Subject();\n\n        this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will trigger `fire$` subscribers\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * button.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next({ action: this });\n        return this;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n- ActionButton: will render one button action\n- ActionGroup: will render one group action and all descendant actions\n- ActionToggle: will render one toggle action\nExample\nTypeScript\ntypescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n *\nTemplate\nhtml\n * \n *\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:102\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n                \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n- Compile and render a Component dinamically for provided @Input action\n- Change/Update the Component accordingly to the change detection\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:91\n                            \n                        \n                \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponentType\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponentType(action: AnyAction, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.directive.ts:137\n                \n            \n\n\n            \n                \n                    Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                AnyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action to get Component for\n\n                                    \n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Injector from current directive instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:83\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :         AnyAction\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action)\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n- Compile and render a Component dinamically for provided @Input action\n- Change/Update the Component accordingly to the change detection\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n * ```typescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n * ```\n *\n * **Template**\n * ```html\n * \n * ```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction) {\n        this.action = action;\n\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance.action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\ntypescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n *\nCan do\ntypescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n *\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionButton with default options and component\nExample:\ntypescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionGroup with default options and component\nExample:\ntypescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionToggle with default options and component\nExample:\ntypescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n * ```typescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n * ```\n *\n * **Can do**\n * ```typescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n * ```\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     * ```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     * ```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     * ```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionOutletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n  declarations: [ActionOutletDirective],\n  imports: [CommonModule],\n  exports: [ActionOutletDirective]\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionToggle.html":{"url":"classes/ActionToggle.html","title":"class - ActionToggle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionToggle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle used to create action with toggle functionality,\ne.g. checkbox, toggle slider\nExample\ntypescript\n * const toggle = new ActionToggle({ checked: true });\n *\nOr\ntypescript\n * const toggle = actionFactory.createToggle({ checked: true });\n *\nOr\ntypescript\n * const toggle = actionFactory.createToggle().check();\n *\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                isChecked\n                            \n                            \n                                isUnchecked\n                            \n                            \n                                trigger\n                            \n                            \n                                uncheck\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionToggleOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-toggle/action-toggle.ts:52\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionToggle\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionToggleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:47\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled, checked\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:42\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions on the change of checked state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:111\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:165\n\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:94\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:105\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:85\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:99\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:81\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:90\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:110\n                \n            \n\n\n            \n                \n                    Will set checked status to true\nIt will not produce second notification if already checked\nExample:\ntypescript\n     * toggle.check();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:141\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is checked\nExample:\ntypescript\n     * const isChecked = toggle.isChecked();\n     *\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUnchecked\n                        \n                        \n                    \n                \n            \n            \n                \nisUnchecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:155\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is unchecked\nExample:\nconst isUnchecked = toggle.isUnchecked();\ntypescript\n     *\n\n\n                    \n                        Example :\n                        \n                            isUnchecked\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:94\n                \n            \n\n\n            \n                \n                    Will toggle current checked state when invoked\nShould be called in view component on click\nExample:\ntypescript\n     * toggle.trigger();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uncheck\n                        \n                        \n                    \n                \n            \n            \n                \nuncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:126\n                \n            \n\n\n            \n                \n                    Will set checked status to false\nIt will not produce second notification if already unchecked\nExample:\ntypescript\n     * toggle.uncheck();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:257\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:270\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:283\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:395\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:387\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:419\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :         Type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:340\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:426\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:323\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:355\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:292\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:306\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:403\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:410\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:380\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:299\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:373\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:332\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:315\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:365\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:347\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:205\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionToggleComponentImpl, ActionToggleEvent, ActionToggleOptions } from './action-toggle.model';\n\n/**\n * Default options for `ActionToggle`\n * Extended by provided options in action `constructor`\n */\nconst defaultToggleOptions: ActionToggleOptions = {\n    checked: false,\n};\n\n/**\n * `ActionToggle` used to create action with toggle functionality,\n * *e.g. checkbox, toggle slider*\n *\n * ## Example\n *\n * ```typescript\n * const toggle = new ActionToggle({ checked: true });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const toggle = actionFactory.createToggle({ checked: true });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const toggle = actionFactory.createToggle().check();\n * ```\n */\nexport class ActionToggle extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions on the change of `checked` state\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled, checked*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `BehaviorSubject`, holding the current checked state\n     */\n    protected fire: BehaviorSubject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionToggle`\n     *\n     * @param options Options for `ActionToggle`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionToggleOptions = defaultToggleOptions,\n                component?: Type) {\n        super({ ...defaultToggleOptions, ...options }, component);\n\n        this.fire = new BehaviorSubject(this.options.checked);\n\n        this.fire$ = this.handleLivecycleDistinct(this.fire.asObservable(), false).pipe(\n          map(checked => ({ action: this, checked }))\n        );\n\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled }))),\n            this.fire.pipe(map(checked => ({ checked })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will toggle current checked state when invoked\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next(!this.fire.getValue());\n        return this;\n    }\n\n    /**\n     * Will set checked status to `true`\n     * It will **not** produce second notification if already checked\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.check();\n     * ```\n     *\n     * @method check\n     */\n    check(): this {\n        this.fire.next(true);\n        return this;\n    }\n\n    /**\n     * Will set checked status to `false`\n     * It will **not** produce second notification if already unchecked\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.uncheck();\n     * ```\n     *\n     * @method uncheck\n     */\n    uncheck(): this {\n        this.fire.next(false);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is checked\n     *\n     * #### Example:\n     * ```typescript\n     * const isChecked = toggle.isChecked();\n     * ```\n     *\n     * @method isChecked\n     */\n    isChecked(): boolean {\n        return this.fire.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is unchecked\n     *\n     * #### Example:\n     * const isUnchecked = toggle.isUnchecked();\n     * ```typescript\n     * ```\n     *\n     * @example isUnchecked\n     */\n    isUnchecked(): boolean {\n        return !this.fire.getValue();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractComponentImpl\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractOptions\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            class\n            ActionAbstract\n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            variable\n            defaultAbstractOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            class\n            ActionButton\n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            class\n            ActionGroup\n            \n                100 %\n                (58/58)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            defaultGroupOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            directive\n            ActionOutletDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            interface\n            ActionOutlet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            injectable\n            ActionOutletFactory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            class\n            ActionToggle\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            variable\n            defaultToggleOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.13\n        \n            @angular/cdk : ~7.3.7\n        \n            @angular/common : ^7.2.13\n        \n            @angular/compiler : ^7.2.13\n        \n            @angular/core : ^7.2.13\n        \n            @angular/forms : ^7.2.13\n        \n            @angular/http : ^7.2.13\n        \n            @angular/material : ~7.3.7\n        \n            @angular/platform-browser : ^7.2.13\n        \n            @angular/platform-browser-dynamic : ^7.2.13\n        \n            @angular/router : ^7.2.13\n        \n            core-js : ^3.0.1\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.4.0\n        \n            travis-deploy-once : ^5.0.9\n        \n            zone.js : ^0.9.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCompodoc Demo TodoMVC Angular\nThis project was generated with angular-cli.\nIt is a demo project for demonstrating Compodoc features :\n\narchitecture\ncomponents documentation\nembedding images\ndocumentating methods and properties of components, classes, interfaces, etc...\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive/pipe/service/class/module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nFurther help\nTo get more help on the angular-cli use ng --help or go check out the Angular-CLI README.\nCompodoc supports syntax highlighting\njavascript\nfunction hello() {\n    console.log('hello world !');\n}\nScreenshots of the application - (for assets embedding demo)\n| Home page                             | About page                             |\n| ------------------------------------- | -------------------------------------- |\n|  |  |\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionButtonCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionButton fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionButtonComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionButton should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-group/action-group.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionGroupComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionGroup should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionToggleCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionToggle fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionToggleComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionToggle should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-outlet.model.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAction\n                \n            \n            \n                \n                    AnyAction type is a shorter way to define the default abstract action type\n\n                \n            \n            \n                \n                            ActionAbstract\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionAbstractOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
