var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/ActionAbstract.html",[0,0.611,1,0.948]],["body/classes/ActionAbstract.html",[0,0.918,1,1.331,2,0.49,3,0.143,4,0.334,5,0.125,6,0.441,7,0.737,8,0.553,9,0.518,10,0.914,11,0.391,12,1.573,13,1.573,14,1.573,15,1.721,16,1.721,17,2.415,18,1.222,19,1.597,20,1.597,21,1.825,22,1.846,23,2.208,24,1.496,25,0.764,26,0.856,27,0.349,28,1.573,29,0.555,30,0.042,31,0.903,32,0.646,33,1.573,34,1.933,35,1.873,36,0.934,37,1.829,38,3.356,39,2.971,40,0.646,41,1.222,42,2.704,43,0.918,44,1.573,45,4.711,46,3.77,47,3.77,48,3.022,49,1.768,50,1.573,51,1.553,52,0.576,53,1.768,54,1.517,55,2.515,56,1.291,57,1.142,58,1.573,59,1.106,60,1.573,61,1.106,62,1.106,63,1.106,64,1.916,65,1.106,66,1.573,67,2.208,68,2.944,69,1.573,70,1.291,71,2.315,72,1.573,73,1.573,74,0.091,75,1.343,76,2.341,77,0.764,78,2.524,79,2.524,80,1.547,81,2.379,82,2.379,83,1.768,84,1.768,85,1.768,86,1.768,87,2.209,88,1.768,89,1.768,90,1.768,91,1.768,92,1.768,93,1.768,94,1.768,95,1.106,96,1.106,97,1.106,98,2.524,99,0.895,100,2.57,101,1.573,102,0.967,103,1.331,104,1.222,105,2.346,106,2.096,107,3.384,108,1.573,109,1.757,110,1.573,111,1.12,112,1.222,113,1.222,114,0.57,115,0.49,116,0.899,117,1.768,118,1.768,119,0.799,120,1.109,121,1.106,122,1.106,123,2.858,124,1.106,125,1.843,126,1.106,127,0.899,128,2.761,129,3.091,130,0.899,131,0.899,132,0.899,133,2.081,134,2.281,135,0.899,136,0.899,137,2.209,138,0.899,139,2.896,140,1.768,141,1.768,142,0.899,143,0.899,144,2.053,145,1.474,146,0.899,147,1.768,148,1.768,149,0.899,150,0.899,151,2.582,152,1.292,153,1.547,154,1.106,155,0.967,156,1.289,157,0.616,158,1.289,159,2.081,160,0.899,161,1.908,162,0.899,163,2.944,164,0.734,165,0.899,166,0.899,167,1.106,168,1.768,169,0.899,170,1.704,171,2.488,172,1.991,173,1.474,174,0.899,175,2.009,176,0.899,177,0.899,178,0.899,179,0.899,180,1.768,181,0.899,182,1.106,183,0.899,184,2.761,185,1.106,186,0.899,187,1.106,188,0.899,189,1.106,190,0.899,191,0.899,192,1.106,193,0.397,194,0.352,195,3.337,196,1.291,197,0.553,198,2.096,199,0.899,200,0.899,201,0.899,202,0.632,203,0.184,204,0.207,205,0.207,206,0.317,207,0.352,208,0.392,209,0.286,210,1.37,211,1.106,212,0.738,213,1.37,214,0.899,215,0.738,216,3.384,217,1.573,218,1.573,219,1.573,220,0.899,221,0.899,222,0.207,223,0.899,224,0.738,225,0.738,226,0.899,227,2.948,228,0.899,229,2.096,230,0.899,231,0.899,232,0.899,233,0.899,234,0.899,235,0.899,236,1.908,237,0.899,238,1.573,239,0.899,240,1.573,241,0.899,242,1.573,243,0.899,244,1.573,245,0.899,246,1.573,247,0.899,248,0.899,249,1.573,250,0.899,251,0.899,252,0.899,253,0.899,254,0.899,255,0.899,256,1.573,257,3.591,258,1.573,259,1.573,260,0.392,261,0.738,262,1.573,263,1.573,264,2.858,265,1.573,266,1.573,267,0.899,268,0.899,269,0.899,270,0.899,271,0.899,272,0.899,273,0.899,274,1.573,275,0.738,276,0.899,277,0.899,278,0.738,279,0.899,280,0.899,281,1.573,282,0.899,283,0.899,284,0.899,285,0.899,286,2.096,287,0.899,288,0.899,289,0.899,290,0.899,291,0.899,292,0.899,293,0.899,294,1.573,295,0.899,296,0.899,297,1.573,298,2.515,299,0.899,300,0.899,301,0.899,302,0.899,303,0.899,304,0.899,305,0.899,306,0.899,307,0.899,308,0.899,309,0.006,310,0.011,311,0.006]],["title/interfaces/ActionAbstractComponentImpl.html",[203,0.611,312,0.199]],["body/interfaces/ActionAbstractComponentImpl.html",[0,0.701,3,0.546,4,0.546,5,0.475,6,0.285,7,0.475,9,0.621,10,1.493,11,0.399,19,1.409,20,1.409,21,1.493,22,1.737,24,1.268,27,0.682,30,0.042,31,0.891,32,1.138,35,2.477,36,0.787,37,1.089,40,0.88,41,2.525,43,0.621,51,1.752,52,0.409,64,1.493,74,0.346,75,1.381,99,0.804,102,3.021,114,0.999,152,1.089,157,1.737,161,2.154,170,1.409,193,0.475,203,0.907,204,0.787,205,0.787,209,1.089,222,1.129,260,1.493,309,0.023,310,0.03,311,0.023,312,0.383,313,0.98,314,2.107,315,3.652,316,1.138,317,3.116,318,3.116,319,3.652,320,3.454,321,3.021,322,1.564,323,1.493,324,2.829,325,1.562,326,2.107,327,1.089,328,2.409,329,2.409,330,2.409,331,2.409]],["title/interfaces/ActionAbstractEvent.html",[204,0.685,312,0.199]],["body/interfaces/ActionAbstractEvent.html",[0,0.707,3,0.55,4,0.55,5,0.479,6,0.288,7,0.479,9,0.626,10,1.504,11,0.4,19,1.416,20,1.416,21,1.504,22,1.746,24,1.274,27,0.684,30,0.042,31,0.808,32,1.143,35,2.407,36,1.023,37,1.416,40,1.143,41,2.164,43,0.808,51,1.567,52,0.412,64,1.504,74,0.348,75,1.385,99,0.808,102,3.032,114,0.945,152,1.416,157,1.353,161,2.164,170,1.416,193,0.479,203,0.707,204,1.023,205,0.793,209,1.416,222,1.133,260,1.941,309,0.023,310,0.03,311,0.023,312,0.383,313,0.987,314,2.122,315,3.131,316,0.886,317,2.427,318,2.427,319,2.427,320,2.427,321,2.739,322,1.839,323,1.504,324,2.837,325,1.755,326,2.739,327,1.416,328,3.131,329,3.131,330,3.131,331,3.131]],["title/interfaces/ActionAbstractOptions.html",[205,0.685,312,0.199]],["body/interfaces/ActionAbstractOptions.html",[0,0.884,3,0.525,4,0.525,5,0.457,6,0.274,7,0.457,9,0.597,10,1.883,11,0.399,19,1.733,20,1.733,21,1.883,22,2.137,24,1.464,27,0.669,30,0.042,31,0.874,32,1.109,35,2.377,36,0.757,37,1.047,40,0.846,41,2.1,43,0.597,51,1.533,52,0.611,64,2.23,74,0.332,75,1.364,99,0.928,102,2.657,114,1.077,152,1.047,157,1.291,161,2.65,170,1.733,193,0.457,203,0.674,204,0.757,205,0.993,209,1.047,222,0.993,260,1.436,309,0.022,310,0.029,311,0.022,312,0.37,313,0.942,314,2.026,315,3.037,316,0.846,317,2.316,318,2.316,319,2.316,320,2.316,321,2.657,322,1.525,323,1.436,324,3.07,325,1.533,326,2.026,327,1.047,328,2.316,329,2.316,330,2.316,331,2.316]],["title/classes/ActionButton.html",[0,0.611,332,0.853]],["body/classes/ActionButton.html",[0,0.756,1,1.843,2,0.901,3,0.264,4,0.264,5,0.23,6,0.335,7,0.23,9,0.73,10,0.721,11,0.385,17,1.998,18,0.804,19,1.682,20,1.591,21,1.866,22,1.823,23,1.017,24,1.37,25,1.796,26,2.533,27,0.23,29,0.924,30,0.042,31,0.89,32,0.672,34,1.017,35,1.416,36,1.15,37,1.801,38,3.632,39,1.61,40,0.425,41,0.804,42,2.476,43,0.776,48,1.163,49,1.841,51,1.642,52,0.648,53,1.841,54,1.479,56,1.358,57,0.901,59,1.163,61,1.163,62,1.163,63,1.163,64,1.866,65,1.163,67,1.61,68,3.579,70,1.358,71,0.721,74,0.167,75,1.414,76,2.533,77,1.273,78,2.598,79,2.598,80,1.998,81,2.598,82,2.598,83,2.285,84,2.285,85,2.285,86,2.285,87,2.598,88,2.285,89,2.285,90,2.285,91,2.285,92,2.285,93,2.285,94,2.285,95,1.841,96,1.841,97,1.841,98,2.831,99,0.813,100,2.818,103,0.584,104,1.273,109,1.017,111,0.648,112,1.796,113,1.796,114,0.776,115,0.901,117,1.841,118,1.841,119,0.832,120,1.147,121,1.163,122,2.285,123,2.598,124,2.285,125,0.901,126,1.163,128,3.153,129,3.518,133,1.017,134,2.012,137,2.285,139,2.476,140,1.841,141,1.841,144,1.77,145,1.163,147,1.841,148,1.841,151,2.706,152,1.175,153,1.61,154,1.163,155,1.017,156,1.017,157,0.648,158,1.017,159,1.61,161,2.081,163,1.163,164,0.425,167,1.163,168,1.841,170,1.713,171,2.443,172,1.955,173,1.163,175,1.163,180,1.163,182,1.163,184,2.285,185,1.163,187,1.163,189,1.163,192,1.163,193,0.559,194,0.648,197,1.017,202,1.163,210,2.443,236,1.273,275,2.15,309,0.011,310,0.018,311,0.011,327,1.033,332,1.431,333,1.578,334,1.163,335,2.619,336,2.384,337,3.034,338,2.619,339,2.619,340,1.578,341,1.655,342,2.15,343,1.655,344,1.841,345,1.655,346,2.619,347,4.713,348,1.358,349,1.358,350,1.358,351,1.358,352,1.358,353,1.358,354,1.358,355,1.358,356,1.655,357,2.15,358,1.841,359,2.15,360,2.619,361,1.358,362,1.358,363,1.358,364,1.358,365,1.358,366,1.358,367,1.358,368,1.358,369,1.358,370,1.358,371,1.358,372,1.358,373,1.358,374,1.358,375,1.358,376,1.358,377,1.358,378,1.358,379,1.358,380,1.358,381,1.358,382,1.358,383,1.163,384,1.358,385,0.804,386,0.901,387,1.163,388,2.285,389,1.358,390,1.358,391,1.358,392,1.358]],["title/interfaces/ActionButtonEvent.html",[312,0.199,386,1.625]],["body/interfaces/ActionButtonEvent.html",[3,0.595,4,0.595,5,0.518,6,0.311,7,0.518,9,0.676,11,0.375,27,0.744,29,1.804,30,0.042,31,0.676,32,1.313,36,1.232,37,1.186,40,1.201,43,0.676,52,0.64,74,0.376,75,1.201,99,0.848,114,0.676,119,1.186,120,1.316,193,0.649,203,0.958,204,1.175,205,1.075,206,1.316,222,1.075,309,0.025,310,0.032,311,0.025,312,0.357,313,1.067,316,0.958,325,1.755,327,1.487,332,1.69,333,1.462,336,1.813,340,1.462,385,1.813,386,2.784,393,2.294,394,2.274,395,2.274,396,2.274,397,2.031,398,2.031,399,2.228,400,3.289,401,2.031,402,1.813,403,2.294,404,2.294,405,2.294]],["title/interfaces/ActionButtonOptions.html",[312,0.199,340,1.169]],["body/interfaces/ActionButtonOptions.html",[3,0.588,4,0.588,5,0.512,6,0.307,7,0.512,9,0.669,11,0.339,27,0.741,29,1.795,30,0.042,31,0.842,32,1.371,36,1.227,37,1.477,40,1.371,43,0.669,52,0.637,74,0.372,75,1.193,99,0.968,114,0.968,119,1.172,120,1.64,193,0.645,203,0.951,204,1.067,205,1.169,206,1.302,222,0.847,309,0.025,310,0.032,311,0.025,312,0.339,313,1.055,316,0.947,325,1.617,327,1.172,332,1.65,333,1.446,336,1.792,340,1.821,385,1.792,386,2.53,393,2.268,394,1.792,395,1.792,396,1.792,397,2.008,398,2.008,399,2.486,400,3.753,401,2.008,402,2.258,403,2.857,404,2.857,405,2.857]],["title/interfaces/ActionGroupEvent.html",[312,0.199,406,1.834]],["body/interfaces/ActionGroupEvent.html",[3,0.594,4,0.594,5,0.517,6,0.31,7,0.517,9,0.675,11,0.381,27,0.709,29,1.803,30,0.042,31,0.675,32,1.312,36,1.074,40,1.2,43,0.675,52,0.61,74,0.376,75,1.312,99,0.848,114,0.675,119,1.184,120,1.314,164,1.508,170,1.486,171,2.028,172,1.623,193,0.709,203,0.957,204,1.174,205,1.074,206,1.314,207,1.46,208,2.037,209,1.184,222,1.074,309,0.025,310,0.032,311,0.025,312,0.357,313,1.065,316,0.956,322,1.314,323,1.623,325,1.703,327,1.486,394,2.272,395,2.272,396,2.272,402,1.81,406,2.874,407,2.29,408,2.028,409,1.623,410,2.618,411,3.057,412,2.874,413,3.057,414,2.618,415,2.618,416,2.874]],["title/interfaces/ActionGroupOptions.html",[312,0.199,409,1.3]],["body/interfaces/ActionGroupOptions.html",[3,0.576,4,0.576,5,0.501,6,0.301,7,0.501,9,0.655,11,0.353,27,0.699,29,1.778,30,0.042,31,0.832,32,1.361,36,0.83,40,1.361,43,0.655,52,0.632,74,0.364,75,1.294,99,0.961,114,0.961,119,1.149,120,1.619,164,1.458,170,1.739,171,2.497,172,1.999,193,0.699,203,0.939,204,1.054,205,1.158,206,1.275,207,1.416,208,2.196,209,1.458,222,0.83,309,0.025,310,0.031,311,0.025,312,0.336,313,1.033,316,0.928,322,1.275,323,1.575,325,1.458,327,1.149,394,1.756,395,1.756,396,1.756,402,2.229,406,2.222,407,2.222,408,1.968,409,1.999,410,3.224,411,3.765,412,3.437,413,4.136,414,3.224,415,3.224,416,3.437]],["title/interfaces/ActionOutlet.html",[312,0.199,417,1.45]],["body/interfaces/ActionOutlet.html",[1,1.237,2,2.119,3,0.45,4,0.45,5,0.391,6,0.4,7,0.54,9,0.871,11,0.368,18,1.891,27,0.54,30,0.042,31,0.706,34,3.346,51,1.898,52,0.695,54,1.657,71,2.271,74,0.284,77,1.891,99,1.065,100,2.166,103,2.081,104,2.533,112,2.166,113,2.166,114,0.808,115,2.838,151,2.166,164,1.45,193,0.767,194,1.105,204,0.648,205,0.648,206,0.995,207,1.525,208,1.229,222,1.197,236,2.533,309,0.019,310,0.026,311,0.019,312,0.297,313,0.807,322,1.374,332,1.58,333,1.525,336,1.371,340,1.883,385,1.371,387,1.983,408,1.536,409,2.094,417,2.335,418,1.983,419,3.195,420,2.119,421,3.195,422,3.195,423,3.195,424,3.195,425,2.82,426,4.003,427,3.195,428,2.82,429,3.195,430,1.883,431,2.82,432,1.58,433,2.315,434,1.371,435,1.525,436,1.983,437,1.371,438,2.315,439,1.983,440,1.983]],["title/directives/ActionOutletDirective.html",[111,1.169,441,1.625]],["body/directives/ActionOutletDirective.html",[0,0.742,1,0.952,3,0.314,4,0.314,5,0.273,6,0.398,7,0.416,9,0.658,11,0.399,18,2.121,19,1.289,20,1.289,24,0.562,25,1.455,26,2.208,27,0.273,30,0.042,31,0.357,35,1.305,43,0.984,51,1.834,52,0.624,54,1.387,57,1.975,71,1.902,74,0.198,76,2.503,77,1.455,80,1.209,100,2.234,103,0.694,105,3.582,109,1.842,111,1.174,112,1.763,113,1.763,114,0.658,125,1.975,134,1.631,139,1.842,144,2.208,151,1.763,152,1.461,153,3.029,155,1.842,157,1.422,158,3.44,159,2.939,164,1.227,172,1.305,193,0.563,194,0.771,196,1.615,203,0.403,206,0.694,208,1.305,209,1.289,210,1.631,213,1.631,222,1.056,224,2.459,225,2.459,227,2.978,236,1.971,260,0.857,261,1.615,309,0.013,310,0.02,311,0.013,316,0.769,321,3.103,322,1.739,323,0.857,326,1.842,332,1.367,336,1.455,358,2.85,399,1.305,401,1.631,412,1.842,417,2.394,419,2.459,432,0.856,437,1.455,441,2.603,442,1.967,443,1.615,444,2.995,445,2.995,446,2.995,447,2.995,448,4.364,449,2.995,450,2.995,451,3.627,452,4.143,453,3.774,454,2.995,455,2.459,456,2.459,457,2.459,458,2.995,459,2.105,460,3.627,461,1.967,462,2.995,463,2.995,464,2.995,465,3.627,466,2.995,467,1.967,468,4.78,469,4.927,470,1.967,471,2.459,472,2.995,473,2.995,474,2.995,475,2.995,476,2.995,477,2.995,478,3.627,479,2.978,480,4.055,481,3.627,482,4.055,483,3.627,484,3.627,485,3.627,486,3.627,487,3.627,488,1.967,489,2.995,490,2.995,491,2.995,492,2.995,493,2.995,494,2.995,495,1.967,496,4.364,497,4.055,498,2.995,499,2.995,500,1.967,501,1.967,502,2.995,503,1.967,504,3.627,505,1.967,506,4.055,507,2.995,508,4.78,509,2.995,510,1.967,511,1.967,512,1.967,513,1.967,514,1.967,515,1.967,516,1.967,517,1.967,518,1.967,519,1.967,520,1.967,521,2.995,522,1.967,523,1.967,524,1.967,525,1.967,526,1.967,527,1.967]],["title/injectables/ActionOutletFactory.html",[420,1.625,528,1.834]],["body/injectables/ActionOutletFactory.html",[0,0.478,3,0.372,4,0.372,5,0.324,6,0.368,9,0.801,11,0.352,19,1.648,20,1.403,25,2.519,26,2.924,27,0.324,30,0.042,51,1.878,52,0.663,54,1.73,67,2.47,71,2.303,74,0.236,77,1.655,99,1.04,100,1.952,103,2.025,104,2.519,112,1.952,113,1.952,114,0.728,115,2.668,151,1.952,156,2.094,164,1.357,193,0.719,194,0.916,207,1.335,208,1.751,209,1.082,210,2.924,213,2.404,222,1.126,236,2.381,309,0.016,310,0.023,311,0.016,323,1.018,332,1.556,333,1.335,336,1.952,337,2.795,340,1.73,385,1.135,387,1.642,399,1.484,408,1.272,409,1.924,416,2.094,417,1.655,420,2.404,421,3.298,422,3.298,423,3.298,424,2.795,426,3.868,427,2.795,429,2.795,430,1.73,432,1.511,433,1.918,434,1.135,435,1.335,436,1.642,437,1.952,439,2.394,453,2.795,456,2.795,459,1.642,479,2.795,528,2.094,529,2.336,530,1.918,531,3.405,532,3.405,533,2.795,534,3.405,535,3.405,536,3.405,537,2.394,538,3.405,539,4.415,540,3.405,541,3.405,542,3.405,543,3.405,544,2.336,545,3.405,546,2.336,547,2.795,548,2.336,549,3.405,550,1.854,551,2.336,552,2.336,553,2.336,554,2.336,555,2.336]],["title/modules/ActionOutletModule.html",[556,1.834,557,1.625]],["body/modules/ActionOutletModule.html",[0,0.856,3,0.667,4,0.667,5,0.58,6,0.348,11,0.279,27,0.58,30,0.041,111,2.361,193,0.746,194,1.639,309,0.028,310,0.034,311,0.028,556,2.571,557,3.189,558,2.94,559,2.571,560,3.433,561,4.415,562,3.433,563,2.94,564,4.415,565,3.433,566,3.433,567,3.433,568,4.12,569,3.433,570,2.94,571,4.182,572,4.12,573,5.019,574,3.433,575,4.182,576,3.433]],["title/classes/ActionToggle.html",[0,0.611,432,0.853]],["body/classes/ActionToggle.html",[0,0.689,1,1.811,2,0.766,3,0.224,4,0.224,5,0.195,6,0.378,7,0.195,9,0.673,10,0.613,11,0.381,17,1.792,18,1.416,19,1.517,20,1.517,21,1.735,22,1.717,23,0.865,24,1.439,25,2.445,26,2.81,27,0.195,29,0.811,30,0.042,31,0.845,32,0.59,34,0.865,35,1.27,36,1.041,37,1.76,38,3.484,39,1.413,40,0.361,41,0.684,42,0.865,43,0.673,48,0.989,49,1.616,51,1.575,52,0.628,53,1.616,54,1.392,57,1.587,59,0.989,61,0.989,62,0.989,63,0.989,64,1.735,65,0.989,67,2.281,68,3.187,71,1.616,74,0.142,75,1.374,76,2.386,77,1.117,78,2.365,79,2.365,80,1.792,81,2.365,82,2.365,83,2.049,84,2.049,85,2.049,86,2.049,87,2.365,88,2.049,89,2.049,90,2.049,91,2.049,92,2.049,93,2.049,94,2.049,95,1.616,96,1.616,97,1.616,98,2.607,99,0.762,100,2.795,103,0.497,104,1.117,109,0.865,111,0.551,112,1.635,113,1.635,114,0.722,115,0.766,117,1.616,118,2.049,119,0.731,120,1.029,121,0.989,122,2.049,123,2.365,124,2.049,125,1.587,126,0.989,128,2.952,129,3.356,133,0.865,134,1.832,137,2.049,139,2.694,140,1.616,141,2.798,144,2.287,145,0.989,147,1.616,148,1.616,151,2.714,152,1.07,153,1.413,154,0.989,155,0.865,156,0.865,157,0.551,158,0.865,159,1.413,161,1.934,163,0.989,164,0.361,167,0.989,168,1.616,170,1.752,171,2.6,172,2.081,173,0.989,175,0.989,180,0.989,182,0.989,184,1.616,185,0.989,187,0.989,189,0.989,192,0.989,193,0.515,194,0.551,195,2.392,197,0.865,202,0.989,210,2.6,213,2.167,236,1.117,309,0.01,310,0.016,311,0.01,342,1.887,344,1.616,347,4.619,348,1.155,349,1.155,350,1.155,351,1.155,352,1.155,353,1.155,354,1.155,355,1.155,357,1.887,358,1.616,359,1.887,361,1.155,362,1.155,363,1.155,364,1.155,365,1.155,366,1.155,367,1.155,368,1.155,369,1.155,370,1.155,371,1.155,372,1.155,373,1.155,374,1.155,375,1.155,376,1.155,377,1.155,378,1.155,379,1.155,380,1.155,381,1.155,382,1.155,383,0.989,384,1.155,389,1.155,390,1.155,391,1.155,392,1.155,430,1.454,432,1.365,434,0.684,435,1.777,436,0.989,437,2.367,471,1.887,550,2.953,577,0.989,578,2.299,579,2.299,580,2.299,581,2.299,582,2.299,583,3.045,584,4.2,585,4.381,586,3.709,587,1.407,588,1.407,589,1.407,590,1.407,591,3.365,592,3.365,593,3.365,594,3.365,595,2.299,596,1.407,597,2.299,598,1.407,599,3.365,600,2.299,601,1.407,602,2.299,603,1.407,604,2.299,605,0.766,606,2.049,607,1.407,608,1.407,609,1.407,610,1.407,611,1.407,612,1.407,613,1.407,614,1.407,615,2.299]],["title/interfaces/ActionToggleEvent.html",[312,0.199,605,1.625]],["body/interfaces/ActionToggleEvent.html",[3,0.566,4,0.566,5,0.493,6,0.296,7,0.493,9,0.644,11,0.382,24,1.429,27,0.731,29,1.764,30,0.042,31,0.644,32,1.283,36,1.21,37,1.129,40,1.165,43,0.644,52,0.649,54,1.442,74,0.358,75,1.352,99,0.823,114,0.823,119,1.129,120,1.254,170,1.674,193,0.63,203,0.929,204,1.148,205,1.042,206,1.254,222,1.042,309,0.024,310,0.031,311,0.024,312,0.351,313,1.016,316,0.912,324,1.934,325,1.73,327,1.442,394,2.205,395,2.205,396,2.205,397,1.934,398,1.934,399,2.178,401,1.934,402,1.726,403,2.184,404,2.184,405,2.184,430,1.392,432,1.678,434,1.726,435,1.392,437,1.726,550,3.119,605,2.722,616,2.184,617,3.189]],["title/interfaces/ActionToggleOptions.html",[312,0.199,430,1.169]],["body/interfaces/ActionToggleOptions.html",[3,0.559,4,0.559,5,0.486,6,0.292,7,0.486,9,0.635,11,0.349,24,1.42,27,0.727,29,1.753,30,0.042,31,0.815,32,1.345,36,1.204,37,1.429,40,1.345,43,0.635,52,0.646,54,1.114,74,0.353,75,1.345,99,0.95,114,1.036,119,1.114,120,1.587,170,1.665,193,0.624,203,0.921,204,1.033,205,1.141,206,1.237,222,0.805,309,0.024,310,0.031,311,0.024,312,0.331,313,1.002,316,0.9,324,2.449,325,1.579,327,1.114,394,1.703,395,1.703,396,1.703,397,1.908,398,1.908,399,2.457,401,1.908,402,2.185,403,2.765,404,2.765,405,2.765,430,1.763,432,1.633,434,1.703,435,1.373,437,1.703,550,3.11,605,2.449,616,2.155,617,3.683]],["title/coverage.html",[618,3.32]],["body/coverage.html",[0,1.073,1,1.115,5,0.487,6,0.504,7,0.752,8,2.768,30,0.041,52,0.419,54,1.115,111,1.375,164,0.901,203,0.718,204,0.806,205,0.806,207,2.125,211,2.467,309,0.024,310,0.031,311,0.024,312,0.388,314,3.056,332,1.004,333,2.055,334,3.164,340,1.375,386,1.911,388,2.467,393,2.768,406,2.158,407,2.768,409,1.529,417,1.705,418,2.467,420,1.911,430,1.375,432,1.004,435,2.055,441,1.911,443,2.881,528,2.158,530,2.881,577,3.164,605,1.911,606,2.467,616,2.768,618,2.881,619,2.881,620,3.509,621,3.509,622,6.049,623,5.421,624,4.502,625,3.509,626,5.421,627,5.421,628,3.509,629,4.97,630,4.08,631,3.509,632,2.881,633,2.881,634,4.502,635,3.509,636,3.509,637,3.509]],["title/dependencies.html",[559,2.202,638,2.505]],["body/dependencies.html",[30,0.042,194,1.7,197,2.668,309,0.03,310,0.035,311,0.03,559,2.668,574,3.562,639,4.339,640,5.944,641,4.339,642,5.13,643,4.339,644,4.339,645,4.339,646,5.13,647,4.212,648,3.562,649,4.339,650,4.339,651,4.339,652,4.339,653,4.339,654,4.339,655,4.339,656,4.339,657,4.339,658,4.339]],["title/miscellaneous/enumerations.html",[659,1.217,660,2.939]],["body/miscellaneous/enumerations.html",[6,0.383,7,0.638,8,3.263,11,0.306,23,3.263,24,1.315,30,0.036,74,0.464,133,3.263,134,2.89,215,4.357,309,0.031,310,0.036,311,0.031,659,2.234,660,3.774,661,3.232]],["title/index.html",[74,0.253,662,1.761,663,1.761]],["body/index.html",[0,1.142,1,0.94,11,0.391,17,2.472,18,1.954,19,1.278,20,0.94,21,1.289,22,1.159,24,0.846,25,2.382,27,0.68,30,0.042,39,1.819,43,0.536,51,1.719,103,1.419,104,2.22,125,2.669,144,1.61,152,0.94,157,1.159,164,1.258,193,0.783,208,1.289,209,1.719,260,1.289,278,2.428,309,0.02,310,0.027,311,0.02,316,0.759,332,1.306,414,2.079,415,2.079,417,2.22,420,2.189,426,2.826,432,1.466,440,2.079,441,1.61,452,2.428,455,2.428,457,2.428,459,2.079,533,3.3,537,3.603,547,2.428,556,1.819,557,2.791,563,3.211,572,3.75,576,3.3,583,2.428,648,2.428,662,2.079,663,2.079,664,2.958,665,2.958,666,5.126,667,2.958,668,2.958,669,2.958,670,4.02,671,2.958,672,2.958,673,2.958,674,2.958,675,2.428,676,2.958,677,2.958,678,2.958,679,4.02,680,2.428,681,2.958,682,2.958,683,2.958,684,2.958,685,2.958,686,2.958,687,2.958,688,5.287,689,2.428,690,4.02,691,5.409,692,4.568,693,4.568,694,4.568,695,2.958,696,2.958,697,2.958,698,2.958,699,2.958,700,2.958,701,5.287,702,2.958,703,2.958,704,4.02,705,2.958,706,2.958,707,2.958,708,2.958,709,4.02,710,2.958,711,4.02,712,2.958,713,4.02,714,2.958,715,4.901,716,2.428,717,2.958,718,2.958,719,2.958,720,2.958,721,2.958,722,2.958,723,4.02,724,2.958,725,4.02,726,2.958,727,2.958,728,2.958,729,2.958,730,2.958,731,2.958,732,2.958,733,2.958,734,2.958,735,2.958,736,2.958,737,2.958,738,2.958]],["title/license.html",[662,1.761,663,1.761,739,2.056]],["body/license.html",[11,0.267,30,0.033,42,2.46,152,1.272,172,1.744,309,0.027,310,0.033,311,0.027,325,1.272,344,2.813,383,2.813,537,3.435,570,2.813,619,3.285,675,3.285,680,3.285,739,3.285,740,4.001,741,5.276,742,4.001,743,4.001,744,4.001,745,4.001,746,4.887,747,4.001,748,4.001,749,4.001,750,4.001,751,4.001,752,4.887,753,5.903,754,4.001,755,4.001,756,4.001,757,5.276,758,4.001,759,4.887,760,4.001,761,4.001,762,4.001,763,4.001,764,4.001,765,4.001,766,4.001,767,4.001,768,4.887,769,4.001,770,4.001,771,4.001,772,4.001,773,4.001,774,4.887,775,4.887,776,4.001,777,4.001,778,4.001,779,4.001,780,4.001,781,4.001,782,4.001,783,4.001,784,4.001,785,4.001,786,4.001,787,4.001,788,4.001,789,4.001,790,4.001,791,4.001,792,4.001,793,4.001,794,4.001,795,4.001,796,4.001,797,4.001,798,4.001,799,4.001,800,4.001]],["title/modules.html",[558,2.843]],["body/modules.html",[30,0.037,309,0.032,310,0.037,311,0.032,557,2.565,558,3.311,647,3.866,801,4.71,802,4.71,803,4.71]],["title/overview.html",[804,3.32]],["body/overview.html",[2,2.403,30,0.039,111,2.32,309,0.03,310,0.035,311,0.03,313,1.262,441,2.403,528,2.714,556,3.186,557,3.151,559,2.714,560,3.623,561,3.623,562,3.623,563,3.102,564,3.623,565,3.623,566,3.623,567,3.623,568,4.254,569,3.623,570,3.102,689,4.517,716,3.623,804,3.623,805,4.413]],["title/miscellaneous/typealiases.html",[659,1.217,806,3.581]],["body/miscellaneous/typealiases.html",[1,1.303,6,0.462,11,0.273,30,0.034,31,0.743,36,1.14,43,0.967,52,0.688,74,0.414,103,1.447,119,1.695,164,1.053,203,1.092,207,1.607,309,0.028,310,0.034,311,0.028,316,1.369,322,1.882,332,1.418,333,1.607,385,2.41,393,3.279,397,2.701,398,2.701,399,2.162,400,3.487,407,3.05,408,2.701,418,3.487,432,1.418,434,2.41,435,1.607,438,3.366,439,2.882,440,2.882,616,3.279,617,3.487,659,1.993,661,4.053,807,4.1,808,4.96]],["title/miscellaneous/variables.html",[659,1.217,809,2.939]],["body/miscellaneous/variables.html",[1,1.195,6,0.448,7,0.522,8,2.892,10,2.343,11,0.358,15,3.087,16,3.087,19,1.195,20,1.195,22,1.474,30,0.042,52,0.641,54,1.195,57,2.794,64,1.639,71,1.639,74,0.379,76,2.928,99,1.05,103,2.062,152,1.709,164,0.965,207,1.474,209,1.495,211,3.306,212,3.087,213,2.048,260,2.412,309,0.026,310,0.032,311,0.026,322,1.327,332,1.075,333,1.474,334,3.306,340,1.474,388,3.306,409,1.639,410,2.643,412,2.892,416,2.312,430,1.474,432,1.075,435,1.474,550,2.048,577,3.306,606,3.306,630,4.213,632,3.861,633,4.213,659,1.827,661,3.891,809,3.087,810,3.76,811,3.76]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":220,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["0.9.1",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":689,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/1",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":805,"title":{},"body":{"overview.html":{}}}],["100",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":703,"title":{},"body":{"index.html":{}}}],["2.0.8",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":743,"title":{},"body":{"license.html":{}}}],["3",{"_index":705,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["32/32",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":716,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4/4",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":726,"title":{},"body":{"index.html":{}}}],["5.0.11",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["58/58",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":734,"title":{},"body":{"index.html":{}}}],["6.5.3",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["8.2.13",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["_action",{"_index":319,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["_actionid",{"_index":221,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["_setparent(parent",{"_index":300,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["_unsetparent",{"_index":306,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["above",{"_index":773,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":31,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["abstract.model",{"_index":206,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["abstract.model.ts",{"_index":314,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"coverage.html":{}}}],["abstract.ts",{"_index":8,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstract.ts:103",{"_index":136,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:107",{"_index":127,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:112",{"_index":132,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:118",{"_index":130,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:124",{"_index":116,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:178",{"_index":101,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:218",{"_index":191,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:270",{"_index":138,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:283",{"_index":142,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:296",{"_index":143,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:305",{"_index":169,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:312",{"_index":179,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:319",{"_index":174,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:328",{"_index":186,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:336",{"_index":165,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:345",{"_index":183,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:353",{"_index":160,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:360",{"_index":190,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:368",{"_index":166,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:378",{"_index":188,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:386",{"_index":181,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:393",{"_index":178,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:400",{"_index":149,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:408",{"_index":146,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:416",{"_index":176,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:423",{"_index":177,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:432",{"_index":150,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:439",{"_index":162,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:94",{"_index":135,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract.ts:98",{"_index":131,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["abstract/action",{"_index":7,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["abstractaction",{"_index":451,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accessed",{"_index":728,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":466,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["accordingly",{"_index":486,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["action",{"_index":11,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["action.getforcedcomponent",{"_index":526,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionabstract",{"_index":1,"title":{"classes/ActionAbstract.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionabstract:103",{"_index":355,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:107",{"_index":350,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:112",{"_index":353,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:118",{"_index":351,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:124",{"_index":348,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:178",{"_index":349,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:218",{"_index":382,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:270",{"_index":361,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:283",{"_index":362,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:296",{"_index":363,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:305",{"_index":371,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:312",{"_index":376,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:319",{"_index":372,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:328",{"_index":379,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:336",{"_index":369,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:345",{"_index":378,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:353",{"_index":367,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:360",{"_index":381,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:368",{"_index":370,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:378",{"_index":380,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:386",{"_index":377,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:393",{"_index":375,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:400",{"_index":365,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:408",{"_index":364,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:416",{"_index":373,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:423",{"_index":374,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:432",{"_index":366,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:439",{"_index":368,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:94",{"_index":354,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstract:98",{"_index":352,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionabstractcomponentimpl",{"_index":203,"title":{"interfaces/ActionAbstractComponentImpl.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionabstractevent",{"_index":204,"title":{"interfaces/ActionAbstractEvent.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionabstractoptions",{"_index":205,"title":{"interfaces/ActionAbstractOptions.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actionbutton",{"_index":332,"title":{"classes/ActionButton.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actionbutton(options",{"_index":553,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actionbuttoncallback",{"_index":400,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttoncomponentimpl",{"_index":385,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actionbuttonevent",{"_index":386,"title":{"interfaces/ActionButtonEvent.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{}}}],["actionbuttonoptions",{"_index":340,"title":{"interfaces/ActionButtonOptions.html":{}},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actioncustom",{"_index":28,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actioncustomoptions",{"_index":50,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["actionfactory.createbutton",{"_index":338,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createbutton().settitle('test",{"_index":339,"title":{},"body":{"classes/ActionButton.html":{}}}],["actionfactory.createtoggle",{"_index":581,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actionfactory.createtoggle().check",{"_index":582,"title":{},"body":{"classes/ActionToggle.html":{}}}],["actiongroup",{"_index":164,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiongroup(options",{"_index":554,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiongroupcomponentimpl",{"_index":408,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["actiongroupevent",{"_index":406,"title":{"interfaces/ActionGroupEvent.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{}}}],["actiongroupoptions",{"_index":409,"title":{"interfaces/ActionGroupOptions.html":{}},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actionoutlet",{"_index":417,"title":{"interfaces/ActionOutlet.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutlet(action",{"_index":505,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdestroy",{"_index":465,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["actionoutletdirective",{"_index":111,"title":{"directives/ActionOutletDirective.html":{}},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"overview.html":{}}}],["actionoutletfactory",{"_index":420,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"index.html":{}}}],["actionoutletmodule",{"_index":557,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["actions",{"_index":209,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actionstate",{"_index":215,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/enumerations.html":{}}}],["actionstate.active",{"_index":173,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.destroyed",{"_index":175,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actionstate.inactive",{"_index":180,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["actiontoggle",{"_index":432,"title":{"classes/ActionToggle.html":{}},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actiontoggle(options",{"_index":555,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["actiontogglecallback",{"_index":617,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontogglecomponentimpl",{"_index":434,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["actiontoggleevent",{"_index":605,"title":{"interfaces/ActionToggleEvent.html":{}},"body":{"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["actiontoggleoptions",{"_index":430,"title":{"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":78,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["active",{"_index":23,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["actually",{"_index":721,"title":{},"body":{"index.html":{}}}],["add",{"_index":702,"title":{},"body":{"index.html":{}}}],["again",{"_index":276,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["aliases",{"_index":807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":141,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["always",{"_index":450,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["and/or",{"_index":766,"title":{},"body":{"license.html":{}}}],["angular",{"_index":157,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["angular/animations",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":574,"title":{},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":194,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["anyaction",{"_index":322,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":668,"title":{},"body":{"index.html":{}}}],["application",{"_index":683,"title":{},"body":{"index.html":{}}}],["approach",{"_index":538,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["appropriate",{"_index":699,"title":{},"body":{"index.html":{}}}],["arising",{"_index":798,"title":{},"body":{"license.html":{}}}],["array",{"_index":410,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"miscellaneous/variables.html":{}}}],["array.from",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assign",{"_index":108,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["assigned",{"_index":497,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["associate",{"_index":708,"title":{},"body":{"index.html":{}}}],["associated",{"_index":754,"title":{},"body":{"license.html":{}}}],["attaches",{"_index":447,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["authors",{"_index":789,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":491,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["available",{"_index":737,"title":{},"body":{"index.html":{}}}],["back",{"_index":278,"title":{},"body":{"classes/ActionAbstract.html":{},"index.html":{}}}],["based",{"_index":685,"title":{},"body":{"index.html":{}}}],["basic",{"_index":335,"title":{},"body":{"classes/ActionButton.html":{}}}],["behaviors",{"_index":14,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject",{"_index":195,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionToggle.html":{}}}],["behaviorsubject(!!this.options.checked",{"_index":607,"title":{},"body":{"classes/ActionToggle.html":{}}}],["behaviorsubject(actionstate.inactive",{"_index":247,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(disabled",{"_index":245,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(icon",{"_index":241,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(title",{"_index":239,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["behaviorsubject(visible",{"_index":243,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["belongs",{"_index":233,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["between",{"_index":16,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["bind",{"_index":735,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":170,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["bootstrap",{"_index":562,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["bridge",{"_index":44,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["browse",{"_index":803,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":647,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":669,"title":{},"body":{"index.html":{}}}],["button",{"_index":336,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.component",{"_index":710,"title":{},"body":{"index.html":{}}}],["button.model",{"_index":387,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["button.model.ts",{"_index":393,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["button.trigger",{"_index":360,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts",{"_index":334,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.ts:39",{"_index":345,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:44",{"_index":343,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:49",{"_index":341,"title":{},"body":{"classes/ActionButton.html":{}}}],["button.ts:87",{"_index":356,"title":{},"body":{"classes/ActionButton.html":{}}}],["button/action",{"_index":333,"title":{},"body":{"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["buttonaction",{"_index":539,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["c",{"_index":742,"title":{},"body":{"license.html":{}}}],["callback",{"_index":399,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callbackmethod",{"_index":456,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["called",{"_index":357,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["case",{"_index":678,"title":{},"body":{"index.html":{}}}],["change",{"_index":125,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["change/update",{"_index":485,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["changes",{"_index":38,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["charge",{"_index":680,"title":{},"body":{"index.html":{},"license.html":{}}}],["check",{"_index":583,"title":{},"body":{"classes/ActionToggle.html":{},"index.html":{}}}],["checkbox",{"_index":579,"title":{},"body":{"classes/ActionToggle.html":{}}}],["checkbox.component",{"_index":724,"title":{},"body":{"index.html":{}}}],["checked",{"_index":550,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":326,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["children",{"_index":412,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":792,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{},"overview.html":{}}}],["clean",{"_index":536,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["clear",{"_index":523,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["click",{"_index":359,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["cluster_actionoutletmodule",{"_index":565,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_declarations",{"_index":566,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["cluster_actionoutletmodule_exports",{"_index":567,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["code",{"_index":535,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["combination",{"_index":192,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["coming",{"_index":396,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["command",{"_index":695,"title":{},"body":{"index.html":{}}}],["comming",{"_index":329,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["commonmodule",{"_index":573,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["compile",{"_index":484,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["compiles",{"_index":446,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["complete",{"_index":145,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["component",{"_index":51,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["component's",{"_index":481,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactory",{"_index":515,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentfactoryresolver",{"_index":469,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["componentref",{"_index":504,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["components",{"_index":316,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["conditions",{"_index":772,"title":{},"body":{"license.html":{}}}],["connection",{"_index":799,"title":{},"body":{"license.html":{}}}],["const",{"_index":210,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["constructor",{"_index":76,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["constructor(options",{"_index":49,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["constructor(private",{"_index":730,"title":{},"body":{"index.html":{}}}],["constructor(viewcontainerref",{"_index":467,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["container",{"_index":482,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["containing",{"_index":411,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["contract",{"_index":795,"title":{},"body":{"license.html":{}}}],["copies",{"_index":768,"title":{},"body":{"license.html":{}}}],["copy",{"_index":752,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":741,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":618,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":104,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["createbutton",{"_index":421,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createbutton(options",{"_index":424,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createcomponent",{"_index":474,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["created",{"_index":415,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["creategroup",{"_index":422,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creategroup(options",{"_index":427,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle",{"_index":423,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["createtoggle(options",{"_index":429,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["creation",{"_index":224,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["current",{"_index":139,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["currently",{"_index":299,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["custom",{"_index":39,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["cycle",{"_index":263,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["damages",{"_index":793,"title":{},"body":{"license.html":{}}}],["deactivate",{"_index":79,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deal",{"_index":756,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":800,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":561,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["default",{"_index":103,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["default's",{"_index":717,"title":{},"body":{"index.html":{}}}],["defaultabstractoptions",{"_index":211,"title":{},"body":{"classes/ActionAbstract.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultbuttonoptions",{"_index":388,"title":{},"body":{"classes/ActionButton.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroupoptions",{"_index":632,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttoggleoptions",{"_index":606,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":440,"title":{},"body":{"interfaces/ActionOutlet.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":100,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["defines",{"_index":489,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["defining",{"_index":171,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{}}}],["demo",{"_index":687,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":559,"title":{"dependencies.html":{}},"body":{"modules/ActionOutletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":472,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["depending",{"_index":189,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["deploy",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["derived",{"_index":35,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["desabled",{"_index":228,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["descendant",{"_index":454,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["destroy",{"_index":80,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["destroyed",{"_index":134,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["destruction",{"_index":492,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["detection",{"_index":487,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["dinamically",{"_index":448,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directive",{"_index":441,"title":{"directives/ActionOutletDirective.html":{}},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":442,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["directly",{"_index":496,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["disable",{"_index":81,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["disabled",{"_index":22,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["distinctuntilchanged",{"_index":198,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["distribute",{"_index":764,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":619,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doen",{"_index":126,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["dom",{"_index":155,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["dropdown",{"_index":416,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":648,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e.g",{"_index":18,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["each",{"_index":17,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["easy",{"_index":667,"title":{},"body":{"index.html":{}}}],["enable",{"_index":82,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["enabled",{"_index":148,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["end",{"_index":679,"title":{},"body":{"index.html":{}}}],["enum",{"_index":214,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["enumerations",{"_index":660,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error('illegal",{"_index":512,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["etc",{"_index":483,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["event",{"_index":325,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"license.html":{}}}],["example",{"_index":25,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["examplebuttoncomponent",{"_index":709,"title":{},"body":{"index.html":{}}}],["examplecheckboxcomponent",{"_index":723,"title":{},"body":{"index.html":{}}}],["examplecomponent",{"_index":725,"title":{},"body":{"index.html":{}}}],["examplegroupcomponent",{"_index":711,"title":{},"body":{"index.html":{}}}],["examplemodule",{"_index":704,"title":{},"body":{"index.html":{}}}],["exampletogglecomponent",{"_index":713,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["exports",{"_index":564,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["exposed",{"_index":520,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["express",{"_index":781,"title":{},"body":{"license.html":{}}}],["extend",{"_index":102,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["extended",{"_index":10,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["extending",{"_index":402,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["extends",{"_index":29,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["factory",{"_index":419,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{}}}],["false",{"_index":57,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["false).pipe",{"_index":609,"title":{},"body":{"classes/ActionToggle.html":{}}}],["fetch",{"_index":498,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["files",{"_index":755,"title":{},"body":{"license.html":{}}}],["filter",{"_index":199,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["filter(state",{"_index":250,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["finish",{"_index":232,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fire",{"_index":36,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["fire$.subscribe(callbackmethod",{"_index":543,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["firecustom",{"_index":72,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["fires",{"_index":230,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["first",{"_index":404,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["fitness",{"_index":786,"title":{},"body":{"license.html":{}}}],["fly",{"_index":449,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["following",{"_index":344,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["forced",{"_index":109,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["forcedcomponent",{"_index":226,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["free",{"_index":749,"title":{},"body":{"license.html":{}}}],["front",{"_index":682,"title":{},"body":{"index.html":{}}}],["function",{"_index":808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["functional",{"_index":532,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["functionality",{"_index":578,"title":{},"body":{"classes/ActionToggle.html":{}}}],["furnished",{"_index":771,"title":{},"body":{"license.html":{}}}],["getactionoutlet",{"_index":500,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype",{"_index":463,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getcomponenttype(action",{"_index":494,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getforcedcomponent",{"_index":83,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["geticon",{"_index":84,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getparent",{"_index":85,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["getter",{"_index":502,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["getting",{"_index":662,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gettitle",{"_index":86,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["goal",{"_index":665,"title":{},"body":{"index.html":{}}}],["going",{"_index":110,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["granted",{"_index":748,"title":{},"body":{"license.html":{}}}],["group",{"_index":208,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["group.component",{"_index":712,"title":{},"body":{"index.html":{}}}],["group.model",{"_index":433,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{}}}],["group.model.ts",{"_index":407,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["group.ts",{"_index":630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["group/action",{"_index":207,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["hammerjs",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":257,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handleactivatestate(observable",{"_index":279,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handled",{"_index":225,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["handlelivecycle(observable",{"_index":270,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["handlelivecycledistinct(observable",{"_index":267,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["happens",{"_index":674,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":747,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":137,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide",{"_index":87,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hide/show",{"_index":684,"title":{},"body":{"index.html":{}}}],["holders",{"_index":790,"title":{},"body":{"license.html":{}}}],["holding",{"_index":118,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["hook",{"_index":522,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["html",{"_index":458,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["icon",{"_index":20,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":218,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["implement",{"_index":119,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["implementation",{"_index":41,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["implementations",{"_index":12,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["implemented",{"_index":34,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"classes/ActionToggle.html":{}}}],["implementing",{"_index":318,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["implements",{"_index":459,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["implied",{"_index":782,"title":{},"body":{"license.html":{}}}],["import",{"_index":193,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{}}}],["imports",{"_index":576,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["inactive",{"_index":133,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/enumerations.html":{}}}],["included",{"_index":776,"title":{},"body":{"license.html":{}}}],["including",{"_index":759,"title":{},"body":{"license.html":{}}}],["increment",{"_index":219,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["index",{"_index":74,"title":{"index.html":{}},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["inherited",{"_index":347,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["initial",{"_index":324,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["initially",{"_index":414,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"index.html":{}}}],["injectable",{"_index":528,"title":{"injectables/ActionOutletFactory.html":{}},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":529,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["injection",{"_index":473,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["injector",{"_index":158,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["injector.get(action.constructor",{"_index":527,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["input",{"_index":321,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{}}}],["inputs",{"_index":464,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["install",{"_index":690,"title":{},"body":{"index.html":{}}}],["instance",{"_index":222,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["instanceof",{"_index":510,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["instances",{"_index":727,"title":{},"body":{"index.html":{}}}],["instantiate",{"_index":342,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["instead",{"_index":156,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["interface",{"_index":312,"title":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":313,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"overview.html":{}}}],["internal",{"_index":216,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["internally",{"_index":227,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["invoked",{"_index":471,"title":{},"body":{"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["isactive",{"_index":88,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ischecked",{"_index":584,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isdestroyed",{"_index":89,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isdisabled",{"_index":90,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isenabled",{"_index":91,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["ishidden",{"_index":92,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isinactive",{"_index":93,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["isunchecked",{"_index":585,"title":{},"body":{"classes/ActionToggle.html":{}}}],["isvisible",{"_index":94,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["it's",{"_index":120,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["keep",{"_index":534,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["kind",{"_index":780,"title":{},"body":{"license.html":{}}}],["klemen",{"_index":744,"title":{},"body":{"license.html":{}}}],["legend",{"_index":560,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["leverage",{"_index":107,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["liability",{"_index":794,"title":{},"body":{"license.html":{}}}],["liable",{"_index":791,"title":{},"body":{"license.html":{}}}],["license",{"_index":739,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":760,"title":{},"body":{"license.html":{}}}],["limited",{"_index":783,"title":{},"body":{"license.html":{}}}],["line",{"_index":696,"title":{},"body":{"index.html":{}}}],["live",{"_index":262,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["livecycle",{"_index":229,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["manually",{"_index":493,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["map",{"_index":384,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["map(checked",{"_index":610,"title":{},"body":{"classes/ActionToggle.html":{}}}],["matches",{"_index":231,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["matching",{"_index":310,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":676,"title":{},"body":{"index.html":{}}}],["menus",{"_index":670,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":785,"title":{},"body":{"license.html":{}}}],["merge",{"_index":383,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["merged",{"_index":223,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["merging",{"_index":121,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["metadata",{"_index":461,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["method",{"_index":67,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["miscellaneous",{"_index":659,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":740,"title":{},"body":{"license.html":{}}}],["modify",{"_index":762,"title":{},"body":{"license.html":{}}}],["module",{"_index":556,"title":{"modules/ActionOutletModule.html":{}},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["module,but",{"_index":720,"title":{},"body":{"index.html":{}}}],["modules",{"_index":558,"title":{"modules.html":{}},"body":{"modules/ActionOutletModule.html":{},"modules.html":{}}}],["more",{"_index":331,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["name",{"_index":113,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["natural",{"_index":677,"title":{},"body":{"index.html":{}}}],["need",{"_index":33,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["needs",{"_index":69,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["never",{"_index":196,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["new",{"_index":54,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":398,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["ng",{"_index":691,"title":{},"body":{"index.html":{}}}],["ngactionoutlet",{"_index":664,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":572,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":521,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["ngoninit",{"_index":731,"title":{},"body":{"index.html":{}}}],["nide",{"_index":167,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["non",{"_index":46,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["noninfringement",{"_index":788,"title":{},"body":{"license.html":{}}}],["notice",{"_index":774,"title":{},"body":{"license.html":{}}}],["notification",{"_index":594,"title":{},"body":{"classes/ActionToggle.html":{}}}],["notified",{"_index":673,"title":{},"body":{"index.html":{}}}],["notifies",{"_index":128,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notify",{"_index":184,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["notifying",{"_index":124,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["npm",{"_index":693,"title":{},"body":{"index.html":{}}}],["null",{"_index":320,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["observable",{"_index":37,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["observable.pipe",{"_index":271,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["observables",{"_index":123,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["obtaining",{"_index":751,"title":{},"body":{"license.html":{}}}],["once",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["ondestroy",{"_index":460,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["one",{"_index":453,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["oninit",{"_index":729,"title":{},"body":{"index.html":{}}}],["optional",{"_index":114,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["options",{"_index":99,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":533,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["oservable",{"_index":394,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["oslaj",{"_index":745,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":797,"title":{},"body":{"license.html":{}}}],["out",{"_index":570,"title":{},"body":{"modules/ActionOutletModule.html":{},"license.html":{},"overview.html":{}}}],["outlet",{"_index":692,"title":{},"body":{"index.html":{}}}],["outlet.directive",{"_index":575,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.directive.ts",{"_index":443,"title":{},"body":{"directives/ActionOutletDirective.html":{},"coverage.html":{}}}],["outlet.directive.ts:106",{"_index":470,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:143",{"_index":495,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:58",{"_index":477,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:87",{"_index":501,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.directive.ts:95",{"_index":488,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["outlet.model",{"_index":323,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["outlet.model.ts",{"_index":418,"title":{},"body":{"interfaces/ActionOutlet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["outlet.model.ts:28",{"_index":425,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:35",{"_index":428,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.model.ts:42",{"_index":431,"title":{},"body":{"interfaces/ActionOutlet.html":{}}}],["outlet.module.ts",{"_index":571,"title":{},"body":{"modules/ActionOutletModule.html":{}}}],["outlet.service.ts",{"_index":530,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"coverage.html":{}}}],["outlet.service.ts:51",{"_index":544,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:67",{"_index":546,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet.service.ts:83",{"_index":548,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["outlet/core",{"_index":701,"title":{},"body":{"index.html":{}}}],["over",{"_index":681,"title":{},"body":{"index.html":{}}}],["override",{"_index":426,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["overriden",{"_index":330,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["overview",{"_index":804,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":638,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":236,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["parent",{"_index":163,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["particular",{"_index":675,"title":{},"body":{"index.html":{},"license.html":{}}}],["pause",{"_index":266,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["paused",{"_index":259,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["pausing",{"_index":274,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["permission",{"_index":746,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":686,"title":{},"body":{"index.html":{}}}],["permit",{"_index":769,"title":{},"body":{"license.html":{}}}],["person",{"_index":750,"title":{},"body":{"license.html":{}}}],["persons",{"_index":770,"title":{},"body":{"license.html":{}}}],["pointing",{"_index":707,"title":{},"body":{"index.html":{}}}],["portions",{"_index":778,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":672,"title":{},"body":{"index.html":{}}}],["possible",{"_index":265,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["previously",{"_index":168,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["prevously",{"_index":147,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["private",{"_index":105,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["produce",{"_index":592,"title":{},"body":{"classes/ActionToggle.html":{}}}],["project",{"_index":700,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":661,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/core/src/lib/action",{"_index":6,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":499,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["properties",{"_index":32,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["property",{"_index":117,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["protected",{"_index":48,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["provide",{"_index":666,"title":{},"body":{"index.html":{}}}],["provided",{"_index":152,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":551,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["providers",{"_index":563,"title":{},"body":{"modules/ActionOutletModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":13,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["providing",{"_index":479,"title":{},"body":{"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{}}}],["public",{"_index":122,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["publish",{"_index":763,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":787,"title":{},"body":{"license.html":{}}}],["reactive",{"_index":45,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["readonlyarray",{"_index":413,"title":{},"body":{"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{}}}],["receive",{"_index":395,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["refer",{"_index":738,"title":{},"body":{"index.html":{}}}],["reference",{"_index":261,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{}}}],["registered",{"_index":403,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["render",{"_index":452,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["rendered",{"_index":480,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["renderer",{"_index":736,"title":{},"body":{"index.html":{}}}],["rendering",{"_index":445,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["rendering.provide",{"_index":706,"title":{},"body":{"index.html":{}}}],["renders",{"_index":234,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["represent",{"_index":154,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["required",{"_index":212,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":569,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}],["resolve",{"_index":475,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["resolvecomponentfactory",{"_index":476,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["restriction",{"_index":758,"title":{},"body":{"license.html":{}}}],["result",{"_index":309,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":311,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":71,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":151,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["rights",{"_index":761,"title":{},"body":{"license.html":{}}}],["root",{"_index":552,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["runtime",{"_index":671,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":197,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":202,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["same",{"_index":719,"title":{},"body":{"index.html":{}}}],["second",{"_index":593,"title":{},"body":{"classes/ActionToggle.html":{}}}],["selector",{"_index":462,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["sell",{"_index":767,"title":{},"body":{"license.html":{}}}],["service",{"_index":531,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["set",{"_index":144,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["set(children",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setactionoutlet(action",{"_index":503,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["seticon",{"_index":95,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["seticon('icon",{"_index":542,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["seticon(icon",{"_index":182,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setter",{"_index":478,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["settings",{"_index":718,"title":{},"body":{"index.html":{}}}],["settitle",{"_index":96,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["settitle('action",{"_index":541,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["settitle('example",{"_index":733,"title":{},"body":{"index.html":{}}}],["settitle(title",{"_index":185,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility",{"_index":97,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["setvisibility(visibility",{"_index":187,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["shall",{"_index":775,"title":{},"body":{"license.html":{}}}],["shared",{"_index":15,"title":{},"body":{"classes/ActionAbstract.html":{},"miscellaneous/variables.html":{}}}],["shere",{"_index":317,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["shorter",{"_index":438,"title":{},"body":{"interfaces/ActionOutlet.html":{},"miscellaneous/typealiases.html":{}}}],["shouldpause",{"_index":264,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["shouldpause).pipe",{"_index":269,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["show",{"_index":98,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["slider",{"_index":580,"title":{},"body":{"classes/ActionToggle.html":{}}}],["software",{"_index":753,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"modules/ActionOutletModule.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["specific",{"_index":40,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["started",{"_index":663,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":24,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["state(`active",{"_index":258,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["statements",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":591,"title":{},"body":{"classes/ActionToggle.html":{}}}],["step",{"_index":688,"title":{},"body":{"index.html":{}}}],["string",{"_index":161,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["structural",{"_index":444,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["subject",{"_index":42,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["subjects",{"_index":106,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["sublicense",{"_index":765,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":405,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscribers",{"_index":327,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["subscription",{"_index":397,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["subscriptions",{"_index":129,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["substantial",{"_index":777,"title":{},"body":{"license.html":{}}}],["super",{"_index":389,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["support",{"_index":801,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":802,"title":{},"body":{"modules.html":{}}}],["switches",{"_index":277,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["switchmap",{"_index":200,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["switchmap(state",{"_index":280,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["table",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":201,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["takeuntil(this.finish",{"_index":272,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["template",{"_index":457,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["test",{"_index":337,"title":{},"body":{"classes/ActionButton.html":{},"injectables/ActionOutletFactory.html":{}}}],["tha",{"_index":328,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["this.action",{"_index":508,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.activate",{"_index":519,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.destroy",{"_index":509,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.action.getparent",{"_index":525,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutlet.createbutton",{"_index":545,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutlet.creategroup",{"_index":547,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{}}}],["this.actionoutlet.createtoggle",{"_index":549,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.actionoutletdestroy",{"_index":524,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.actionoutletfactory.createbutton",{"_index":540,"title":{},"body":{"injectables/ActionOutletFactory.html":{}}}],["this.activate",{"_index":304,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.changes",{"_index":59,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":516,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref",{"_index":506,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.componentref.instance._action",{"_index":518,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.custom",{"_index":55,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom$.pipe(map(custom",{"_index":66,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.custom.next(math.random",{"_index":73,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.deactivate",{"_index":308,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disable",{"_index":302,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled",{"_index":244,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled$.pipe(map(disabled",{"_index":65,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.disabled.getvalue",{"_index":297,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(false",{"_index":295,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.disabled.next(true",{"_index":296,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.enable",{"_index":307,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.finish",{"_index":248,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.fire",{"_index":53,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire$.subscribe(this.options.callback",{"_index":392,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.fire.getvalue",{"_index":615,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next",{"_index":70,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.fire.next(!this.fire.getvalue",{"_index":612,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(false",{"_index":614,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.next(true",{"_index":613,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.fire.pipe(map(checked",{"_index":611,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.forcedcomponent",{"_index":256,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.getcomponenttype(this.action",{"_index":513,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.group",{"_index":455,"title":{},"body":{"directives/ActionOutletDirective.html":{},"index.html":{}}}],["this.group.createtoggle",{"_index":732,"title":{},"body":{"index.html":{}}}],["this.handleactivatestate(source",{"_index":273,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(merge",{"_index":390,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.handlelivecycle(observable",{"_index":268,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(observable.merge",{"_index":60,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.custom.asobservable",{"_index":58,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycle(this.fire.asobservable",{"_index":56,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["this.handlelivecycledistinct(this.disabled.asobservable",{"_index":254,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.fire.asobservable",{"_index":608,"title":{},"body":{"classes/ActionToggle.html":{}}}],["this.handlelivecycledistinct(this.icon.asobservable",{"_index":252,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.title.asobservable",{"_index":251,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.handlelivecycledistinct(this.visible.asobservable",{"_index":253,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon",{"_index":240,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon$.pipe(map(icon",{"_index":62,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.icon.getvalue",{"_index":290,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.icon.next(icon",{"_index":289,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.injector",{"_index":514,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.isdestroyed",{"_index":281,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options",{"_index":237,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.options.callback",{"_index":391,"title":{},"body":{"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.parent",{"_index":298,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isactive",{"_index":303,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.parent.isdisabled",{"_index":301,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state",{"_index":246,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.asobservable().pipe",{"_index":255,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.complete",{"_index":285,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.getvalue",{"_index":286,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.active",{"_index":282,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.destroyed",{"_index":284,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.next(actionstate.inactive",{"_index":283,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.state.pipe",{"_index":249,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title",{"_index":238,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title$.pipe(map(title",{"_index":61,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.title.getvalue",{"_index":288,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.title.next(title",{"_index":287,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.viewcontainerref.clear",{"_index":507,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.viewcontainerref.createcomponent(componentfactory",{"_index":517,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["this.visible",{"_index":242,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible$.pipe(map(visible",{"_index":63,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["this.visible.getvalue",{"_index":294,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(false",{"_index":292,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(true",{"_index":291,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["this.visible.next(visibility",{"_index":293,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["throw",{"_index":511,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["title",{"_index":19,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":437,"title":{},"body":{"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["toggle.check",{"_index":595,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.component",{"_index":714,"title":{},"body":{"index.html":{}}}],["toggle.ischecked",{"_index":597,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.isunchecked",{"_index":600,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.model",{"_index":436,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["toggle.model.ts",{"_index":616,"title":{},"body":{"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["toggle.trigger",{"_index":602,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts",{"_index":577,"title":{},"body":{"classes/ActionToggle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toggle.ts:110",{"_index":590,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:126",{"_index":603,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:141",{"_index":596,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:155",{"_index":598,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:42",{"_index":589,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:47",{"_index":588,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:52",{"_index":587,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.ts:94",{"_index":601,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle.uncheck",{"_index":604,"title":{},"body":{"classes/ActionToggle.html":{}}}],["toggle/action",{"_index":435,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":698,"title":{},"body":{"index.html":{}}}],["tool.choose",{"_index":697,"title":{},"body":{"index.html":{}}}],["tort",{"_index":796,"title":{},"body":{"license.html":{}}}],["travis",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["trigger",{"_index":68,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["triggered",{"_index":346,"title":{},"body":{"classes/ActionButton.html":{}}}],["true",{"_index":213,"title":{},"body":{"classes/ActionAbstract.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":52,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"interfaces/ActionOutlet.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":806,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":235,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["types",{"_index":315,"title":{},"body":{"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{}}}],["typescript",{"_index":26,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["uncheck",{"_index":586,"title":{},"body":{"classes/ActionToggle.html":{}}}],["unchecked",{"_index":599,"title":{},"body":{"classes/ActionToggle.html":{}}}],["undefined",{"_index":159,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["underlying",{"_index":490,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["unique",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uniquelly",{"_index":217,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["unless",{"_index":140,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{}}}],["unset",{"_index":305,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["use",{"_index":537,"title":{},"body":{"injectables/ActionOutletFactory.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":43,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["usevalue",{"_index":715,"title":{},"body":{"index.html":{}}}],["value",{"_index":260,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"directives/ActionOutletDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":809,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":153,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["view",{"_index":358,"title":{},"body":{"classes/ActionButton.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{}}}],["viewcontainerref",{"_index":468,"title":{},"body":{"directives/ActionOutletDirective.html":{}}}],["visibility",{"_index":21,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"index.html":{}}}],["visible",{"_index":64,"title":{},"body":{"classes/ActionAbstract.html":{},"interfaces/ActionAbstractComponentImpl.html":{},"interfaces/ActionAbstractEvent.html":{},"interfaces/ActionAbstractOptions.html":{},"classes/ActionButton.html":{},"classes/ActionToggle.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":401,"title":{},"body":{"interfaces/ActionButtonEvent.html":{},"interfaces/ActionButtonOptions.html":{},"directives/ActionOutletDirective.html":{},"interfaces/ActionToggleEvent.html":{},"interfaces/ActionToggleOptions.html":{}}}],["warranties",{"_index":784,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":779,"title":{},"body":{"license.html":{}}}],["way",{"_index":439,"title":{},"body":{"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"miscellaneous/typealiases.html":{}}}],["whenever",{"_index":275,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{}}}],["whether",{"_index":172,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionGroupEvent.html":{},"interfaces/ActionGroupOptions.html":{},"directives/ActionOutletDirective.html":{},"classes/ActionToggle.html":{},"license.html":{}}}],["wish",{"_index":722,"title":{},"body":{"index.html":{}}}],["without",{"_index":757,"title":{},"body":{"license.html":{}}}],["world",{"_index":47,"title":{},"body":{"classes/ActionAbstract.html":{}}}],["yarn",{"_index":694,"title":{},"body":{"index.html":{}}}],["yes",{"_index":115,"title":{},"body":{"classes/ActionAbstract.html":{},"classes/ActionButton.html":{},"interfaces/ActionOutlet.html":{},"injectables/ActionOutletFactory.html":{},"classes/ActionToggle.html":{}}}],["zone.js",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":568,"title":{},"body":{"modules/ActionOutletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActionAbstract.html":{"url":"classes/ActionAbstract.html","title":"class - ActionAbstract","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionAbstract\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.ts\n        \n\n            \n                Description\n            \n            \n                ActionAbstract is extended by all action implementations\nProvides all the behaviors, shared between each action\ne.g. title, icon, visibility, disabled, active state\nExample\n```typescript\n\nexport class ActionCustom extends ActionAbstract {\n// Abstract properties need to be implemented by derived class\nfire$: Observable;\nchanges$: Observable;\n// A custom observable, specific to this action implementation\ncustom$: Observable;\n\n// A custom subject that is used to bridge reactive and non reactive world\nprotected custom: Subject;\n\nconstructor(options: ActionCustomOptions,\ncomponent?: Type) {\nthis.fire = new Subject();\nthis.custom = new Subject();\n\nthis.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\nthis.custom$ = this.handleLivecycle(this.custom.asObservable());\nthis.changes$ = this.handleLivecycle(Observable.merge(\nthis.title$.pipe(map(title => ({ title }))),\nthis.icon$.pipe(map(icon => ({ icon }))),\nthis.visible$.pipe(map(visible => ({ visible }))),\nthis.disabled$.pipe(map(disabled => ({ disabled }))),\nthis.custom$.pipe(map(custom => ({ custom })))\n));\n}\n\n// Abstract method trigger needs to be implemented by every derived class\ntrigger(): this {\nthis.fire.next({ action: this });\nreturn this;\n}\n\n// A custom method to trigger custom subject and custom$ observable\nfireCustom(): this {\nthis.custom.next(Math.random());\nreturn this;\n}\n}\n```\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: Options, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-abstract/action-abstract.ts:178\n                            \n                        \n\n                \n                    \n                            Abstract action constructor. It will:\n\nExtend default options with derived default options and custom options\nCreate all private subjects that are used to leverage reactive world with non reactive\nCreate observable for each private subject\nAssign forced component, that is going to be used by ActionOutletDirective\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionAbstract\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:124\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:178\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:107\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:118\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:98\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:112\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:94\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:103\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:270\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:283\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:296\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:408\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:400\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:432\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:353\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:439\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:336\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:368\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:305\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:319\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:416\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:423\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:393\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:312\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:386\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:345\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:328\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:378\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:360\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-abstract/action-abstract.ts:218\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, NEVER } from 'rxjs';\nimport { distinctUntilChanged , filter, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionGroup } from '../action-group/action-group';\n\n/**\n * Default options for `ActionAbstract` - shared between **all** actions\n * Extended by provided options in action `constructor`\n */\nconst defaultAbstractOptions: Required = {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n};\n\n/**\n * The state of the action\n * Can be `Active`, `Inactive` or `Destroyed`\n */\nexport const enum ActionState {\n    Active,\n    Inactive,\n    Destroyed,\n}\n\n/**\n * @internal\n *\n * Used to uniquelly identify the action\n */\nlet increment = 0;\n\n/**\n * `ActionAbstract` is extended by **all** action implementations\n * Provides all the behaviors, shared between **each** action\n * *e.g. title, icon, visibility, disabled, active state*\n *\n * ## Example\n *\n * ```typescript\n * export class ActionCustom extends ActionAbstract {\n *     // Abstract properties need to be implemented by derived class\n *     fire$: Observable;\n *     changes$: Observable;\n *     // A custom observable, specific to this action implementation\n *     custom$: Observable;\n *\n *     // A custom subject that is used to bridge reactive and non reactive world\n *     protected custom: Subject;\n *\n *     constructor(options: ActionCustomOptions,\n *                 component?: Type) {\n *         this.fire = new Subject();\n *         this.custom = new Subject();\n *\n *         this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n *         this.custom$ = this.handleLivecycle(this.custom.asObservable());\n *         this.changes$ = this.handleLivecycle(Observable.merge(\n *             this.title$.pipe(map(title => ({ title }))),\n *             this.icon$.pipe(map(icon => ({ icon }))),\n *             this.visible$.pipe(map(visible => ({ visible }))),\n *             this.disabled$.pipe(map(disabled => ({ disabled }))),\n *             this.custom$.pipe(map(custom => ({ custom })))\n *         ));\n *     }\n *\n *     // Abstract method trigger needs to be implemented by every derived class\n *     trigger(): this {\n *         this.fire.next({ action: this });\n *         return this;\n *     }\n *\n *     // A custom method to trigger custom subject and custom$ observable\n *     fireCustom(): this {\n *         this.custom.next(Math.random());\n *         return this;\n *     }\n * }\n * ```\n */\nexport abstract class ActionAbstract {\n    /**\n     * @internal\n     *\n     * Used to uniquelly identify the action\n     */\n    readonly _actionId = increment++;\n    /**\n     * `Observable` that notifies subscriptions when title changes\n     */\n    readonly title$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when icon changes\n     */\n    readonly icon$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when visibility state changes\n     * (visible or hidden)\n     */\n    readonly visible$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when disabled state changes\n     */\n    readonly disabled$: Observable;\n    /**\n     * `Observable` that notifies subscriptions when action state changes\n     * e.g. `Active`, `Inactive`, `Destroyed`\n     */\n    readonly state$: Observable;\n    /**\n     * **Abstract** property, holding `Observable`\n     * Each derived class **should** implement it's own `fire$` observable,\n     * with it's own specific implementation\n     */\n    abstract readonly fire$: Observable;\n    /**\n     * **Abstract** property, holding `Observable`\n     * Each derived class **should** implement it's own `changes$` observable,\n     * merging all public observables, notifying for every change doen to action\n     */\n    abstract readonly changes$: Observable;\n\n    /**\n     * Options of action instance\n     * **Merged** default options from derived class, default options from abstract class,\n     * and options provided on action creation to `constructor`\n     */\n    protected readonly options: Options;\n    /**\n     * `Component`, provided to action `constructor`\n     * Should be forced and used instead of component in `Injector`\n     * That is handled by `ActionOutletDirective`\n     */\n    protected readonly forcedComponent?: Type;\n    /**\n     * Title `BehaviorSubject`, used **internally** to notify on title change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly title: BehaviorSubject;\n    /**\n     * Icon `BehaviorSubject`, used **internally** to notify on icon change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly icon: BehaviorSubject;\n    /**\n     * Visibility `BehaviorSubject`, used **internally** to notify on visibility state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly visible: BehaviorSubject;\n    /**\n     * Desabled state `BehaviorSubject`, used **internally** to notify on disabled state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly disabled: BehaviorSubject;\n    /**\n     * Action livecycle state `BehaviorSubject`, used **internally** to notify on action state change\n     * Used to leverage reactive world with non reactive\n     */\n    protected readonly state: BehaviorSubject;\n    /**\n     * `Observable` that fires, when state matches `ActionState.Destroyed`\n     * Used to complete all **internal** subjects\n     */\n    protected readonly finish: Observable;\n\n    /**\n     * Parent of current action. This is a parent action,\n     * to whom current action belongs to, and renders into\n     */\n    private parent?: ActionGroup;\n\n    /**\n     * `constructor` should be `ActionAbstract`\n     */\n    ['constructor']: typeof ActionAbstract;\n\n    /**\n     * Abstract action `constructor`. It will:\n     * - **Extend** default options with derived default options and custom options\n     * - **Create** all private subjects that are used to leverage reactive world with non reactive\n     * - **Create** observable for each private subject\n     * - **Assign** forced component, that is going to be used by `ActionOutletDirective`\n     *\n     * @param options Options for `ActionAbstract`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: Options,\n                component?: Type) {\n        const { title, icon, visible, disabled } = this.options = { ...defaultAbstractOptions, ...options };\n\n        this.title = new BehaviorSubject(title);\n        this.icon = new BehaviorSubject(icon);\n        this.visible = new BehaviorSubject(visible);\n        this.disabled = new BehaviorSubject(disabled);\n        this.state = new BehaviorSubject(ActionState.Inactive);\n        this.finish = this.state.pipe(\n            filter(state => state === ActionState.Destroyed)\n        );\n\n        this.title$ = this.handleLivecycleDistinct(this.title.asObservable());\n        this.icon$ = this.handleLivecycleDistinct(this.icon.asObservable());\n        this.visible$ = this.handleLivecycleDistinct(this.visible.asObservable());\n        this.disabled$ = this.handleLivecycleDistinct(this.disabled.asObservable());\n        this.state$ = this.state.asObservable().pipe(\n            distinctUntilChanged()\n        );\n\n        this.forcedComponent = component;\n    }\n\n    /**\n     * Abstract method trigger should be implemented by **each** derived class, in\n     * combination with `fire` subject and `fire$` observable\n     */\n    abstract trigger(): this;\n\n    /**\n     * Used **internally** to handle livecycle of observables\n     * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`),\n     * and will notify **only** when value or reference **changes**\n     *\n     * @param observable `Observable` to handle live cycle\n     * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n     */\n    protected handleLivecycleDistinct(observable: Observable, shouldPause?: boolean): Observable {\n        return this.handleLivecycle(observable, shouldPause).pipe(\n            distinctUntilChanged()\n        );\n    }\n\n    /**\n     * Used internally to handle livecycle of observables\n     * It will handle action state(`Active`, `Inactive` - **paused**, `Destroyed`)\n     *\n     * @param observable `Observable` to handle live cycle\n     * @param shouldPause Defining, whether it should be possible to pause provided observable. True by default\n     */\n    protected handleLivecycle(observable: Observable, shouldPause: boolean = true): Observable {\n        const source = observable.pipe(\n            takeUntil(this.finish)\n        );\n\n        if (!shouldPause) {\n            return source;\n        }\n\n        return this.handleActivateState(source);\n    }\n\n    /**\n     * Used **internally** to handle pausing of observables\n     * Will deactivate observable, whenever state of the action changes to `Inactive`,\n     * and will activate observable again, when it switches back to `Active`\n     *\n     * @param observable `Observable` to handle pausing\n     */\n    protected handleActivateState(observable: Observable): Observable {\n        return this.state.pipe(\n            switchMap(state => state === ActionState.Inactive ? (NEVER) : observable)\n        );\n    }\n\n    /**\n     * Will **activate** all observables in current action,\n     * **unless action is already destroyed**\n     */\n    activate(): this {\n        if (this.isDestroyed()) {\n            return this;\n        }\n\n        this.state.next(ActionState.Active);\n        return this;\n    }\n\n    /**\n     * Will **deactivate** all observables in current action,\n     * **unless action is already destroyed**\n     */\n    deactivate(): this {\n        if (this.isDestroyed()) {\n            return this;\n        }\n\n        this.state.next(ActionState.Inactive);\n        return this;\n    }\n\n    /**\n     * Will set action state to `Destroyed`, which will\n     * complete all observables\n     */\n    destroy(): this {\n        this.state.next(ActionState.Destroyed);\n        this.state.complete();\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Active`\n     */\n    isActive(): boolean {\n        return this.state.getValue() === ActionState.Active;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Inactive`\n     */\n    isInactive(): boolean {\n        return this.state.getValue() === ActionState.Inactive;\n    }\n\n    /**\n     * Returns boolean defining whether action has state `ActionState.Destroyed`\n     */\n    isDestroyed(): boolean {\n        return this.state.getValue() === ActionState.Destroyed;\n    }\n\n    /**\n     * Will set the new title and notify all title subscriptions\n     *\n     * @param title The new action title\n     */\n    setTitle(title: string): this {\n        this.title.next(title);\n        return this;\n    }\n\n    /**\n     * Returns current action title\n     */\n    getTitle(): string {\n        return this.title.getValue();\n    }\n\n    /**\n     * Will set the new icon and notify all icon subscriptions\n     *\n     * @param icon The new action icon\n     */\n    setIcon(icon: string): this {\n        this.icon.next(icon);\n        return this;\n    }\n\n    /**\n     * Returns current action icon\n     */\n    getIcon(): string {\n        return this.icon.getValue();\n    }\n\n    /**\n     * Will show the action, **if previously hidden**\n     */\n    show(): this {\n        this.visible.next(true);\n        return this;\n    }\n\n    /**\n     * Will nide the action, **if previously visible**\n     */\n    hide(): this {\n        this.visible.next(false);\n        return this;\n    }\n\n    /**\n     * Will show or hide the action depending from the provided visibility boolean\n     *\n     * @param visibility The new visibility\n     */\n    setVisibility(visibility: boolean): this {\n        this.visible.next(visibility);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is visible\n     */\n    isVisible(): boolean {\n        return this.visible.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is hidden\n     */\n    isHidden(): boolean {\n        return !this.visible.getValue();\n    }\n\n    /**\n     * Will enable action, **if prevously disabled**\n     */\n    enable(): this {\n        this.disabled.next(false);\n        return this;\n    }\n\n    /**\n     * Will disable action, **if prevously enabled**\n     */\n    disable(): this {\n        this.disabled.next(true);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is disabled\n     */\n    isDisabled(): boolean {\n        return this.disabled.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is enabled\n     */\n    isEnabled(): boolean {\n        return !this.disabled.getValue();\n    }\n\n    /**\n     * Returns a `Component`, that is provided as forced component via action `constructor`\n     * This component should be used by `ActionOutletDirective`, to represent\n     * the action in DOM, instead the component, provided via Angular `Injector`\n     */\n    getForcedComponent(): Type | undefined {\n        return this.forcedComponent;\n    }\n\n    /**\n     * Returns current parent of the action\n     */\n    getParent(): ActionGroup | undefined {\n        return this.parent;\n    }\n\n    /**\n     * @internal\n     *\n     * **Internal** method to set parent of current action. It will:\n     * - **Set** parent, but only if currently not defined\n     * - **Disable** current action if parent is disabled\n     * - **Activate** current action if parent is active\n     */\n    _setParent(parent: ActionGroup): this {\n        if (this.parent === undefined) {\n            this.parent = parent;\n            if (this.parent.isDisabled()) {\n                this.disable();\n            }\n            if (this.parent.isActive()) {\n                this.activate();\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * @internal\n     *\n     * **Internal** method to unset parent of current action. It will:\n     * - **Set** parent to undefined\n     * - **Enable** current action\n     * - **Deactivate** current action\n     */\n    _unsetParent(): this {\n        this.parent = undefined;\n        this.enable();\n        this.deactivate();\n        return this;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractComponentImpl.html":{"url":"interfaces/ActionAbstractComponentImpl.html","title":"interface - ActionAbstractComponentImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractComponentImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract interface that all derived action component implementation types should extend\nAll components will shere this interface after implementing derived component implementation types\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _action\n                                    \n                                \n                                \n                                    \n                                        _action:     Action | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Action | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The derived action instance, as Input in angular component\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractEvent.html":{"url":"interfaces/ActionAbstractEvent.html","title":"interface - ActionAbstractEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that every event of child actions should extend from\nUsed as a value provided to fire$ observable subscribers\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         AnyAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action instance, tha this event is comming from\nShould be overriden by derived interface with more specific action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionAbstractOptions.html":{"url":"interfaces/ActionAbstractOptions.html","title":"interface - ActionAbstractOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionAbstractOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-abstract/action-abstract.model.ts\n        \n\n            \n                Description\n            \n            \n                Abstract action options, extended by all options of every derived action class\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        visible\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action disabled state\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action title\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial action visibility state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { AnyAction } from '../action-outlet.model';\n\n/**\n * **Abstract** interface that all derived action component implementation types should extend\n * All components will shere this interface after implementing derived component implementation types\n */\nexport interface ActionAbstractComponentImpl {\n    /**\n     * The derived action instance, as Input in angular component\n     */\n    _action?: Action | null; // @Input\n}\n\n/**\n * Abstract action options, extended by all options of every derived action class\n */\nexport interface ActionAbstractOptions {\n    /**\n     * Optional **initial** action title\n     */\n    readonly title?: string;\n    /**\n     * Optional **initial** action icon\n     */\n    readonly icon?: string;\n    /**\n     * Optional **initial** action visibility state\n     */\n    readonly visible?: boolean;\n    /**\n     * Optional **initial** action disabled state\n     */\n    readonly disabled?: boolean;\n}\n\n/**\n * The event interface, that **every** event of child actions should extend from\n * Used as a value provided to `fire$` observable subscribers\n */\nexport interface ActionAbstractEvent {\n    /**\n     * The action instance, tha this event is comming from\n     * Should be overriden by derived interface with more specific action\n     */\n    readonly action: AnyAction;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionButton.html":{"url":"classes/ActionButton.html","title":"class - ActionButton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton used to create basic button action\nExample\n```typescript\n\nconst button = new ActionButton({ title: 'Test' });\n\n\nOr\n```typescript\n\nconst button = actionFactory.createButton({ title: 'Test' });\n\n\nOr\n```typescript\n\nconst button = actionFactory.createButton().setTitle('Test');\n```\n\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                trigger\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionButtonOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-button/action-button.ts:49\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionButton\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionButtonOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionButton\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:44\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-button/action-button.ts:39\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions whenever button is triggered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:124\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:178\n\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:107\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:118\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:98\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:112\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:94\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:103\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-button/action-button.ts:87\n                \n            \n\n\n            \n                \n                    Will trigger fire$ subscribers\nShould be called in view component on click\nExample:\ntypescript\n     * button.trigger();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:270\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:283\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:296\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:408\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:400\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:432\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:353\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:439\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:336\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:368\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:305\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:319\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:416\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:423\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:393\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:312\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:386\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:345\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:328\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:378\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:360\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:218\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { Observable, Subject, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionButtonComponentImpl, ActionButtonEvent, ActionButtonOptions } from './action-button.model';\n\n/**\n * Default options for `ActionButton`\n * Extended by provided options in action `constructor`\n */\nconst defaultButtonOptions: ActionButtonOptions = { };\n\n/**\n * `ActionButton` used to create basic button action\n *\n * ## Example\n *\n * ```typescript\n * const button = new ActionButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton({ title: 'Test' });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const button = actionFactory.createButton().setTitle('Test');\n * ```\n */\nexport class ActionButton extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions whenever button is triggered\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `Subject`, used to notify subscribers on action trigger\n     */\n    protected fire: Subject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionButton`\n     *\n     * @param options Options for `ActionButton`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionButtonOptions = defaultButtonOptions,\n                component?: Type) {\n        super({ ...defaultButtonOptions, ...options }, component);\n\n        this.fire = new Subject();\n\n        this.fire$ = this.handleLivecycle(this.fire.asObservable(), false);\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will trigger `fire$` subscribers\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * button.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next({ action: this });\n        return this;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonEvent.html":{"url":"interfaces/ActionButtonEvent.html","title":"interface - ActionButtonEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionButton fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionButton\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButton\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionButton instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionButtonOptions.html":{"url":"interfaces/ActionButtonOptions.html","title":"interface - ActionButtonOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionButtonOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-button/action-button.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionButton specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionButtonCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionButtonCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button';\n\n/**\n * Type that components used by `ActionButton` should implement\n */\nexport type ActionButtonComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionButton` `fire$`\n */\nexport type ActionButtonCallback = (event: ActionButtonEvent) => void;\n\n/**\n * `ActionButton` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionButtonOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionButtonCallback;\n}\n\n/**\n * The event interface, that subscribers of `ActionButton` `fire$` oservable will receive\n */\nexport interface ActionButtonEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionButton` instance, that this event is coming from\n     */\n    readonly action: ActionButton;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupEvent.html":{"url":"interfaces/ActionGroupEvent.html","title":"interface - ActionGroupEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionGroup fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionGroup\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionGroup instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionGroupOptions.html":{"url":"interfaces/ActionGroupOptions.html","title":"interface - ActionGroupOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionGroupOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-group/action-group.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionGroup specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        children\n                                \n                                \n                                            Optional\n                                        dropdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The array, containing children actions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdown\n                                    \n                                \n                                \n                                    \n                                        dropdown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional boolean defining whether group is initially created as dropdown\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { AnyAction } from '../action-outlet.model';\nimport { ActionGroup } from './action-group';\n\n/**\n * Type that components used by `ActionGroup` should implement\n */\nexport type ActionGroupComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * `ActionGroup` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionGroupOptions extends ActionAbstractOptions {\n    /**\n     * The array, containing **children** actions\n     */\n    readonly children: ReadonlyArray;\n    /**\n     * Optional boolean defining whether group is **initially** created as dropdown\n     */\n    readonly dropdown?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionGroup` `fire$` oservable will receive\n */\nexport interface ActionGroupEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionGroup` instance, that this event is coming from\n     */\n    readonly action: ActionGroup;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionOutlet.html":{"url":"interfaces/ActionOutlet.html","title":"interface - ActionOutlet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionOutlet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutlet interface is implemented by all factory classes.\ne.g. ActionOutletFactory and ActionGroup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createButton\n                                \n                                \n                                    createGroup\n                                \n                                \n                                    createToggle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:28\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionButton with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:35\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionGroup with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.model.ts:42\n                \n            \n\n\n            \n                \n                    When implemented should create and return a new instance of ActionToggle with default options and component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Should override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractEvent, ActionAbstractOptions } from './action-abstract/action-abstract.model';\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\n\n/**\n * AnyAction type is a shorter way to define the default abstract action type\n */\nexport type AnyAction = ActionAbstract;\n\n/**\n * ActionOutlet interface is implemented by all factory classes.\n *\n * e.g. `ActionOutletFactory` and `ActionGroup`\n */\nexport interface ActionOutlet {\n    /**\n     * When implemented should create and return a new instance of `ActionButton` with default options and component\n     * @param options Should override the default options for `ActionButton`\n     * @param component Should override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton;\n\n    /**\n     * When implemented should create and return a new instance of `ActionGroup` with default options and component\n     * @param options Should override the default options for `ActionGroup`\n     * @param component Should override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup;\n\n    /**\n     * When implemented should create and return a new instance of `ActionToggle` with default options and component\n     * @param options Should override the default options for `ActionToggle`\n     * @param component Should override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ActionOutletDirective.html":{"url":"directives/ActionOutletDirective.html","title":"directive - ActionOutletDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ActionOutletDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.directive.ts\n        \n\n            \n                Description\n            \n            \n                Structural directive used for rendering actions to the DOM.\nIt compiles and attaches the action components dinamically on the fly\nThe @Input is always an action derived from AbstractAction class, e.g.:\n\nActionButton: will render one button action\nActionGroup: will render one group action and all descendant actions\nActionToggle: will render one toggle action\n\nExample\nTypeScript\n```typescript\n\nthis.group = new ActionGroup({\nchildren: [\nnew ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n})\n]\n});\n\n\nTemplate\n```html\n\n\n```\n\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [actionOutlet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponentType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionOutlet\n                            \n                            \n                                actionOutletDestroy\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    actionOutlet\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef, componentFactoryResolver: ComponentFactoryResolver, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-outlet.directive.ts:106\n                            \n                        \n\n                \n                    \n                            Invoked by Angular with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used for Component creation via .createComponent()\n\n                                                        \n                                                \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to resolve component factory via .resolveComponentFactory()\n\n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                            \n                        \n                \n                    \n                        Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionOutletDestroy\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:95\n                            \n                        \n                \n                    \n                        Defines whether underlying child action instance will be destroyed automatically\nIf false, destruction of action should be handled MANUALLY\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getComponentType\n                        \n                        \n                    \n                \n            \n            \n                \ngetComponentType(action: AnyAction, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.directive.ts:143\n                \n            \n\n\n            \n                \n                    Will return the Component type for provided action\nIf action has directly assigned Component type via constructor, then that component is forced and used\nIf action does not have directly assigned Component type via constructor, Injector is used to fetch proper Component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                AnyAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action to get Component for\n\n                                    \n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Injector from current directive instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        actionOutlet\n                    \n                \n\n                \n                    \n                        getactionOutlet()\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:87\n                                \n                            \n                    \n                        \n                                Getter for internally used action\n\n\n                                \n                                    Returns :         AnyAction | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setactionOutlet(action)\n                    \n                \n                            \n                                \n                                    Defined in projects/core/src/lib/action-outlet.directive.ts:58\n                                \n                            \n                    \n                        \n                                Action setter, providing action, to be rendered in the component's view container.\ne.g. ActionButton, ActionGroup, etc.\nOn set, it will:\n\nCompile and render a Component dinamically for provided @Input action\nChange/Update the Component accordingly to the change detection\n\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            action\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    Injector,\n    Input,\n    OnDestroy,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ActionAbstract } from './action-abstract/action-abstract';\nimport { ActionAbstractComponentImpl } from './action-abstract/action-abstract.model';\nimport { AnyAction } from './action-outlet.model';\n\n/**\n * Structural directive used for rendering actions to the DOM.\n * It compiles and attaches the action components **dinamically** on the fly\n *\n * The `@Input` is always an action derived from `AbstractAction` class, e.g.:\n * - `ActionButton`: will render one button action\n * - `ActionGroup`: will render one group action and all descendant actions\n * - `ActionToggle`: will render one toggle action\n *\n * ## Example\n *\n * **TypeScript**\n * ```typescript\n * this.group = new ActionGroup({\n *     children: [\n *         new ActionButton({\n *             title: 'Action Title',\n *             icon: 'icon',\n *             callback: callbackMethod\n *         })\n *     ]\n * });\n * ```\n *\n * **Template**\n * ```html\n * \n * ```\n */\n\n@Directive({\n    selector: '[actionOutlet]',\n})\nexport class ActionOutletDirective implements OnDestroy {\n    /**\n     * Action setter, providing action, to be rendered in the component's view container.\n     * *e.g. `ActionButton`, `ActionGroup`, etc.*\n     *\n     * On set, it will:\n     * - **Compile** and render a `Component` **dinamically** for provided `@Input` action\n     * - **Change/Update** the `Component` accordingly to the change detection\n     */\n    @Input() set actionOutlet(action: AnyAction | undefined) {\n        if (this.componentRef) {\n            this.viewContainerRef.clear();\n            this.componentRef = undefined;\n        }\n\n        if (this.action) {\n            this.action.destroy();\n        }\n\n        this.action = action;\n\n        if (this.action === undefined) {\n            return;\n        }\n\n        if (this.action instanceof ActionAbstract === false) {\n            throw new Error('Illegal state: \"actionOutlet\" should be instance of AbstractAction');\n        }\n\n        const component = this.getComponentType(this.action, this.injector);\n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n        this.componentRef = this.viewContainerRef.createComponent(componentFactory);\n        this.componentRef.instance._action = this.action.activate();\n    }\n\n    /**\n     * Getter for **internally** used action\n     */\n    get actionOutlet(): AnyAction | undefined {\n        return this.action;\n    }\n\n    /**\n     * Defines whether underlying child action instance will be destroyed automatically\n     * If `false`, destruction of action should be handled **MANUALLY**\n     */\n    @Input() actionOutletDestroy = true;\n\n    /**\n     * `Component` reference to the component, used by rendered action\n     */\n    private componentRef?: ComponentRef;\n\n    /**\n     * Action instance, used **internally** by the directive\n     * Should **never** be directly exposed\n     */\n    private action?: AnyAction;\n\n    /**\n     * Invoked by Angular with dependency injection\n     *\n     * @param viewContainerRef Used for Component creation via `.createComponent()`\n     * @param componentFactoryResolver Used to resolve component factory via `.resolveComponentFactory()`\n     */\n    constructor(\n        private viewContainerRef: ViewContainerRef,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private injector: Injector\n    ) { }\n\n    /**\n     * Angular `ngOnDestroy` hook will:\n     * - **Destroy** provided @Input action\n     * - **Clear** the view container\n     */\n    ngOnDestroy(): void {\n        if (this.actionOutletDestroy && this.action && !this.action.getParent()) {\n            this.action.destroy();\n        }\n\n        this.viewContainerRef.clear();\n        this.action = undefined;\n        this.componentRef = undefined;\n    }\n\n    /**\n     * Will return the `Component` type for provided action\n     * If action **has** directly assigned `Component` type via `constructor`, then that component is **forced** and used\n     * If action **does not have** directly assigned `Component` type via `constructor`, `Injector` is used to fetch proper `Component`\n     *\n     * @param action Action to get `Component` for\n     * @param injector `Injector` from current directive instance\n     */\n    getComponentType(action: AnyAction, injector: Injector): Type {\n        return action.getForcedComponent() || >injector.get(action.constructor);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionOutletFactory.html":{"url":"injectables/ActionOutletFactory.html","title":"injectable - ActionOutletFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ActionOutletFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.service.ts\n        \n\n            \n                Description\n            \n            \n                ActionOutletFactory is a service providing functional way to create the actions.\nIn order to keep the code clean, use only one approach.\nExample\nInstead of\n```typescript\n\nconst buttonAction = new ActionButton({\ntitle: 'Action Title',\nicon: 'icon',\ncallback: callbackMethod\n});\n\n\nCan do\n```typescript\n\nconst buttonAction = this.actionOutletFactory.createButton()\n.setTitle('Action Title')\n.setIcon('icon')\n.fire$.subscribe(callbackMethod);\n```\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createButton\n                            \n                            \n                                createGroup\n                            \n                            \n                                createToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createButton\n                        \n                        \n                    \n                \n            \n            \n                \ncreateButton(options?: ActionButtonOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:51\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionButton with default options and component\nExample:\ntypescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionButtonOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionButton\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionButton\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionButton\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(options?: ActionGroupOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:67\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionGroup with default options and component\nExample:\ntypescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionGroupOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionGroup\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionGroup\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToggle\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToggle(options?: ActionToggleOptions, component?: Type)\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-outlet.service.ts:83\n                \n            \n\n\n            \n                \n                    Will create and return a new instance of ActionToggle with default options and component\nExample:\ntypescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     *\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                ActionToggleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default options for ActionToggle\n\n                                    \n                                \n                                \n                                    component\n                                    \n                                                Type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Override the default component for ActionToggle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ActionToggle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@angular/core';\n\nimport { ActionButton } from './action-button/action-button';\nimport { ActionButtonComponentImpl, ActionButtonOptions } from './action-button/action-button.model';\nimport { ActionGroup } from './action-group/action-group';\nimport { ActionGroupComponentImpl, ActionGroupOptions } from './action-group/action-group.model';\nimport { ActionOutlet } from './action-outlet.model';\nimport { ActionToggle } from './action-toggle/action-toggle';\nimport { ActionToggleComponentImpl, ActionToggleOptions } from './action-toggle/action-toggle.model';\n\n/**\n * ActionOutletFactory is a service providing functional way to create the actions.\n * In order to keep the code clean, use only one approach.\n *\n * ## Example\n *\n * **Instead of**\n * ```typescript\n * const buttonAction = new ActionButton({\n *    title: 'Action Title',\n *    icon: 'icon',\n *    callback: callbackMethod\n * });\n * ```\n *\n * **Can do**\n * ```typescript\n * const buttonAction = this.actionOutletFactory.createButton()\n *    .setTitle('Action Title')\n *    .setIcon('icon')\n *    .fire$.subscribe(callbackMethod);\n * ```\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionOutletFactory implements ActionOutlet {\n    /**\n     * Will create and return a new instance of `ActionButton` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const button = this.actionOutlet.createButton({ title: 'Test' });\n     * ```\n     *\n     * @method createButton\n     * @param options Override the default options for `ActionButton`\n     * @param component Override the default component for `ActionButton`\n     */\n    createButton(options?: ActionButtonOptions, component?: Type): ActionButton {\n        return new ActionButton(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionGroup` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const group = this.actionOutlet.createGroup({ dropdown: true });\n     * ```\n     *\n     * @method createGroup\n     * @param options Override the default options for `ActionGroup`\n     * @param component Override the default component for `ActionGroup`\n     */\n    createGroup(options?: ActionGroupOptions, component?: Type): ActionGroup {\n        return new ActionGroup(options, component);\n    }\n\n    /**\n     * Will create and return a new instance of `ActionToggle` with default options and component\n     *\n     * #### Example:\n     * ```typescript\n     * const toggle = this.actionOutlet.createToggle({ checked: true });\n     * ```\n     *\n     * @method createToggle\n     * @param options Override the default options for `ActionToggle`\n     * @param component Override the default component for `ActionToggle`\n     */\n    createToggle(options?: ActionToggleOptions, component?: Type): ActionToggle {\n        return new ActionToggle(options, component);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionOutletModule.html":{"url":"modules/ActionOutletModule.html","title":"module - ActionOutletModule","body":"\n                   \n\n\n\n\n    Modules\n    ActionOutletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/core/src/lib/action-outlet.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionOutletDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ActionOutletDirective } from './action-outlet.directive';\n\n@NgModule({\n    declarations: [ActionOutletDirective],\n    imports: [CommonModule],\n    exports: [ActionOutletDirective]\n})\nexport class ActionOutletModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionToggle.html":{"url":"classes/ActionToggle.html","title":"class - ActionToggle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionToggle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle used to create action with toggle functionality,\ne.g. checkbox, toggle slider\nExample\n```typescript\n\nconst toggle = new ActionToggle({ checked: true });\n\n\nOr\n```typescript\n\nconst toggle = actionFactory.createToggle({ checked: true });\n\n\nOr\n```typescript\n\nconst toggle = actionFactory.createToggle().check();\n```\n\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstract\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                changes$\n                            \n                            \n                                    Readonly\n                                fire$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                changes$\n                            \n                            \n                                constructor\n                            \n                            \n                                    Readonly\n                                disabled$\n                            \n                            \n                                    Abstract\n                                    Readonly\n                                fire$\n                            \n                            \n                                    Readonly\n                                icon$\n                            \n                            \n                                    Readonly\n                                state$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                            \n                                    Readonly\n                                visible$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                            \n                                isChecked\n                            \n                            \n                                isUnchecked\n                            \n                            \n                                trigger\n                            \n                            \n                                uncheck\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                destroy\n                            \n                            \n                                disable\n                            \n                            \n                                enable\n                            \n                            \n                                getForcedComponent\n                            \n                            \n                                getIcon\n                            \n                            \n                                getParent\n                            \n                            \n                                getTitle\n                            \n                            \n                                hide\n                            \n                            \n                                isActive\n                            \n                            \n                                isDestroyed\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isEnabled\n                            \n                            \n                                isHidden\n                            \n                            \n                                isInactive\n                            \n                            \n                                isVisible\n                            \n                            \n                                setIcon\n                            \n                            \n                                setTitle\n                            \n                            \n                                setVisibility\n                            \n                            \n                                show\n                            \n                            \n                                    Abstract\n                                trigger\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ActionToggleOptions, component?: Type)\n                    \n                \n                        \n                            \n                                Defined in projects/core/src/lib/action-toggle/action-toggle.ts:52\n                            \n                        \n\n                \n                    \n                            Public constructor used to instantiate ActionToggle\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ActionToggleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Options for ActionToggle\n\n                                                        \n                                                \n                                                \n                                                        component\n                                                  \n                                                        \n                                                                        Type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Optional custom Component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:47\n                            \n                        \n\n                \n                    \n                        Observable notifies subscriptions on following changes:\ntitle, icon, visibility, disabled, checked\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:42\n                            \n                        \n\n                \n                    \n                        Observable notifying subscriptions on the change of checked state\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            changes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:124\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own changes$ observable,\nmerging all public observables, notifying for every change doen to action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            constructor\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:178\n\n                            \n                        \n\n                \n                    \n                        constructor should be ActionAbstract\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            disabled$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:107\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when disabled state changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                                Readonly\n                            fire$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:118\n\n                            \n                        \n\n                \n                    \n                        Abstract property, holding Observable\nEach derived class should implement it's own fire$ observable,\nwith it's own specific implementation\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            icon$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:98\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when icon changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            state$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:112\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when action state changes\ne.g. Active, Inactive, Destroyed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:94\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when title changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            visible$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ActionAbstract\n\n                                \n                            \n                        \n                            \n                                    Defined in         ActionAbstract:103\n\n                            \n                        \n\n                \n                    \n                        Observable that notifies subscriptions when visibility state changes\n(visible or hidden)\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:110\n                \n            \n\n\n            \n                \n                    Will set checked status to true\nIt will not produce second notification if already checked\nExample:\ntypescript\n     * toggle.check();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isChecked\n                        \n                        \n                    \n                \n            \n            \n                \nisChecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:141\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is checked\nExample:\ntypescript\n     * const isChecked = toggle.isChecked();\n     *\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUnchecked\n                        \n                        \n                    \n                \n            \n            \n                \nisUnchecked()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:155\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is unchecked\nExample:\nconst isUnchecked = toggle.isUnchecked();\ntypescript\n     *\n\n\n                    \n                        Example :\n                        \n                            isUnchecked\n                        \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \ntrigger()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:94\n                \n            \n\n\n            \n                \n                    Will toggle current checked state when invoked\nShould be called in view component on click\nExample:\ntypescript\n     * toggle.trigger();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uncheck\n                        \n                        \n                    \n                \n            \n            \n                \nuncheck()\n                \n            \n\n\n            \n                \n                    Defined in projects/core/src/lib/action-toggle/action-toggle.ts:126\n                \n            \n\n\n            \n                \n                    Will set checked status to false\nIt will not produce second notification if already unchecked\nExample:\ntypescript\n     * toggle.uncheck();\n     *\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:270\n\n                \n            \n\n\n            \n                \n                    Will activate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:283\n\n                \n            \n\n\n            \n                \n                    Will deactivate all observables in current action,\nunless action is already destroyed\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:296\n\n                \n            \n\n\n            \n                \n                    Will set action state to Destroyed, which will\ncomplete all observables\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \ndisable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:408\n\n                \n            \n\n\n            \n                \n                    Will disable action, if prevously enabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \nenable()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:400\n\n                \n            \n\n\n            \n                \n                    Will enable action, if prevously disabled\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForcedComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetForcedComponent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:432\n\n                \n            \n\n\n            \n                \n                    Returns a Component, that is provided as forced component via action constructor\nThis component should be used by ActionOutletDirective, to represent\nthe action in DOM, instead the component, provided via Angular Injector\n\n\n                    \n                        Returns :     Type | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetIcon()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:353\n\n                \n            \n\n\n            \n                \n                    Returns current action icon\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:439\n\n                \n            \n\n\n            \n                \n                    Returns current parent of the action\n\n\n                    \n                        Returns :         ActionGroup | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:336\n\n                \n            \n\n\n            \n                \n                    Returns current action title\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hide\n                        \n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:368\n\n                \n            \n\n\n            \n                \n                    Will nide the action, if previously visible\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActive\n                        \n                        \n                    \n                \n            \n            \n                \nisActive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:305\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Active\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDestroyed\n                        \n                        \n                    \n                \n            \n            \n                \nisDestroyed()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:319\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Destroyed\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:416\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is disabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nisEnabled()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:423\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is enabled\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isHidden\n                        \n                        \n                    \n                \n            \n            \n                \nisHidden()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:393\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is hidden\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isInactive\n                        \n                        \n                    \n                \n            \n            \n                \nisInactive()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:312\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action has state ActionState.Inactive\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:386\n\n                \n            \n\n\n            \n                \n                    Returns boolean defining whether action is visible\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIcon\n                        \n                        \n                    \n                \n            \n            \n                \nsetIcon(icon: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:345\n\n                \n            \n\n\n            \n                \n                    Will set the new icon and notify all icon subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    icon\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action icon\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTitle\n                        \n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:328\n\n                \n            \n\n\n            \n                \n                    Will set the new title and notify all title subscriptions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new action title\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVisibility\n                        \n                        \n                    \n                \n            \n            \n                \nsetVisibility(visibility: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:378\n\n                \n            \n\n\n            \n                \n                    Will show or hide the action depending from the provided visibility boolean\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    visibility\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new visibility\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:360\n\n                \n            \n\n\n            \n                \n                    Will show the action, if previously hidden\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            trigger\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trigger()\n                \n            \n\n\n            \n                \n                    Inherited from         ActionAbstract\n\n                \n            \n            \n                \n                        Defined in         ActionAbstract:218\n\n                \n            \n\n\n            \n                \n                    Abstract method trigger should be implemented by each derived class, in\ncombination with fire subject and fire$ observable\n\n\n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from '@angular/core';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ActionAbstract } from '../action-abstract/action-abstract';\nimport { ActionToggleComponentImpl, ActionToggleEvent, ActionToggleOptions } from './action-toggle.model';\n\n/**\n * Default options for `ActionToggle`\n * Extended by provided options in action `constructor`\n */\nconst defaultToggleOptions: ActionToggleOptions = {\n    checked: false,\n};\n\n/**\n * `ActionToggle` used to create action with toggle functionality,\n * *e.g. checkbox, toggle slider*\n *\n * ## Example\n *\n * ```typescript\n * const toggle = new ActionToggle({ checked: true });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const toggle = actionFactory.createToggle({ checked: true });\n * ```\n *\n * **Or**\n *\n * ```typescript\n * const toggle = actionFactory.createToggle().check();\n * ```\n */\nexport class ActionToggle extends ActionAbstract {\n    /**\n     * `Observable` notifying subscriptions on the change of `checked` state\n     */\n    readonly fire$: Observable;\n    /**\n     * `Observable` notifies subscriptions on following changes:\n     * *title, icon, visibility, disabled, checked*\n     */\n    readonly changes$: Observable;\n\n    /**\n     * `BehaviorSubject`, holding the current checked state\n     */\n    protected fire: BehaviorSubject;\n\n    /**\n     * Public `constructor` used to instantiate `ActionToggle`\n     *\n     * @param options Options for `ActionToggle`\n     * @param component Optional custom `Component`\n     */\n    constructor(options: ActionToggleOptions = defaultToggleOptions,\n                component?: Type) {\n        super({ ...defaultToggleOptions, ...options }, component);\n\n        this.fire = new BehaviorSubject(!!this.options.checked);\n\n        this.fire$ = this.handleLivecycleDistinct(this.fire.asObservable(), false).pipe(\n          map(checked => ({ action: this, checked }))\n        );\n\n        this.changes$ = this.handleLivecycle(merge(\n            this.title$.pipe(map(title => ({ title }))),\n            this.icon$.pipe(map(icon => ({ icon }))),\n            this.visible$.pipe(map(visible => ({ visible }))),\n            this.disabled$.pipe(map(disabled => ({ disabled }))),\n            this.fire.pipe(map(checked => ({ checked })))\n        ));\n\n        if (this.options.callback) {\n            this.fire$.subscribe(this.options.callback);\n        }\n    }\n\n    /**\n     * Will toggle current checked state when invoked\n     * Should be called in view component on click\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.trigger();\n     * ```\n     *\n     * @method trigger\n     */\n    trigger(): this {\n        this.fire.next(!this.fire.getValue());\n        return this;\n    }\n\n    /**\n     * Will set checked status to `true`\n     * It will **not** produce second notification if already checked\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.check();\n     * ```\n     *\n     * @method check\n     */\n    check(): this {\n        this.fire.next(true);\n        return this;\n    }\n\n    /**\n     * Will set checked status to `false`\n     * It will **not** produce second notification if already unchecked\n     *\n     * #### Example:\n     * ```typescript\n     * toggle.uncheck();\n     * ```\n     *\n     * @method uncheck\n     */\n    uncheck(): this {\n        this.fire.next(false);\n        return this;\n    }\n\n    /**\n     * Returns boolean defining whether action is checked\n     *\n     * #### Example:\n     * ```typescript\n     * const isChecked = toggle.isChecked();\n     * ```\n     *\n     * @method isChecked\n     */\n    isChecked(): boolean {\n        return this.fire.getValue();\n    }\n\n    /**\n     * Returns boolean defining whether action is unchecked\n     *\n     * #### Example:\n     * const isUnchecked = toggle.isUnchecked();\n     * ```typescript\n     * ```\n     *\n     * @example isUnchecked\n     */\n    isUnchecked(): boolean {\n        return !this.fire.getValue();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleEvent.html":{"url":"interfaces/ActionToggleEvent.html","title":"interface - ActionToggleEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                The event interface, that subscribers of ActionToggle fire$ oservable will receive\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         ActionToggle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggle\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ActionToggle instance, that this event is coming from\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    New checked state of the action\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionToggleOptions.html":{"url":"interfaces/ActionToggleOptions.html","title":"interface - ActionToggleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionToggleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/core/src/lib/action-toggle/action-toggle.model.ts\n        \n\n            \n                Description\n            \n            \n                ActionToggle specific options, extending abstract options with it's specific properties\n\n            \n\n            \n                Extends\n            \n            \n                        ActionAbstractOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        callback\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                    \n                                \n                                \n                                    \n                                        callback:         ActionToggleCallback\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionToggleCallback\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional callback, that will be registered as first subscriber to fire$ observable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional initial checked state\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ActionAbstractComponentImpl, ActionAbstractEvent, ActionAbstractOptions } from '../action-abstract/action-abstract.model';\nimport { ActionToggle } from './action-toggle';\n\n/**\n * Type that components used by `ActionToggle` should implement\n */\nexport type ActionToggleComponentImpl = ActionAbstractComponentImpl;\n\n/**\n * Subscription next callback for `ActionToggle` `fire$`\n */\nexport type ActionToggleCallback = (event: ActionToggleEvent) => void;\n\n/**\n * `ActionToggle` specific options, extending abstract options with it's specific properties\n */\nexport interface ActionToggleOptions extends ActionAbstractOptions {\n    /**\n     * Optional callback, that will be registered as first subscriber to `fire$` observable\n     */\n    readonly callback?: ActionToggleCallback;\n    /**\n     * Optional **initial** checked state\n     */\n    readonly checked?: boolean;\n}\n\n/**\n * The event interface, that subscribers of `ActionToggle` `fire$` oservable will receive\n */\nexport interface ActionToggleEvent extends ActionAbstractEvent {\n    /**\n     * The `ActionToggle` instance, that this event is coming from\n     */\n    readonly action: ActionToggle;\n    /**\n     * New checked state of the action\n     */\n    readonly checked: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractComponentImpl\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.model.ts\n            \n            interface\n            ActionAbstractOptions\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            class\n            ActionAbstract\n            \n                100 %\n                (32/32)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-abstract/action-abstract.ts\n            \n            variable\n            defaultAbstractOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.model.ts\n            \n            interface\n            ActionButtonOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            class\n            ActionButton\n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-button/action-button.ts\n            \n            variable\n            defaultButtonOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupEvent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.model.ts\n            \n            interface\n            ActionGroupOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            class\n            ActionGroup\n            \n                100 %\n                (58/58)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            defaultGroupOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-group/action-group.ts\n            \n            variable\n            unique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.directive.ts\n            \n            directive\n            ActionOutletDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.model.ts\n            \n            interface\n            ActionOutlet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-outlet.service.ts\n            \n            injectable\n            ActionOutletFactory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleEvent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.model.ts\n            \n            interface\n            ActionToggleOptions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            class\n            ActionToggle\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                projects/core/src/lib/action-toggle/action-toggle.ts\n            \n            variable\n            defaultToggleOptions\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.13\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ^8.2.13\n        \n            @angular/compiler : ^8.2.13\n        \n            @angular/core : ^8.2.13\n        \n            @angular/forms : ^8.2.13\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ^8.2.13\n        \n            @angular/platform-browser-dynamic : ^8.2.13\n        \n            @angular/router : ^8.2.13\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.5.3\n        \n            travis-deploy-once : ^5.0.11\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionState   (projects/.../action-abstract.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionState\n                    \n                \n                    \n                        \n                            The state of the action\nCan be Active, Inactive or Destroyed\n\n                        \n                    \n                        \n                            \n                                 Active\n                            \n                        \n                        \n                            \n                                 Inactive\n                            \n                        \n                        \n                            \n                                 Destroyed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n    \n\n    \n\n    \n\n\n\n\n    \n\n\n\nNgActionOutlet\nThe goal of ActionOutlet is to provide an easy API to build dynamic menus on runtime and have the possibility to get notified for each and every change, that happens to any particular action in the menu (e.g. Title change, icon change, disabled state, ...).\nThe most natural use case is when back-end is in charge over the visibility of actions and menus of the front-end application (e.g. hide/show actions based on permissions).\nDEMO\nGetting started\nStep 1: Install ng-action-outlet\nYou can use either npm or yarn command-line tool.Choose the tool that is appropriate for your project.\nNPM\nnpm install @ng-action-outlet/core\nYARN\nyarn add @ng-action-outlet/core\nStep 2: Import ActionOutletModule\nImport Action Outlet NgModule to your Angular module\nimport { ActionOutletModule } from '@ng-action-outlet/core';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  ...\n})\nexport class ExampleModule { }Step 3: Define what component to use with what action\nUse providers to set default components for each action to be used for rendering.Provide action class and use value pointing to your component class,\nso that action outlet can associate component to provided action.\nimport { ActionOutletModule, ActionButton, ActionGroup, ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleButtonComponent } from './example-button.component';\nimport { ExampleGroupComponent } from './example-group.component';\nimport { ExampleToggleComponent } from './example-toggle.component';\n\n@NgModule({\n  ...\n  imports: [ActionOutletModule],\n  providers: [{\n      provide: ActionButton,\n      useValue: ExampleButtonComponent\n  }, {\n      provide: ActionGroup,\n      useValue: ExampleGroupComponent\n  }, {\n      provide: ActionToggle,\n      useValue: ExampleToggleComponent\n  }]\n  ...\n})\nexport class ExampleModule { }Step 4: Override default's in your component\nIn order to override your default settings, do the same as initially in a module,but only for actions that you actually wish to change.\nimport { ActionToggle } from '@ng-action-outlet/core';\n\nimport { ExampleCheckboxComponent } from './example-checkbox.component';\n\n@Component({\n  ...\n  providers: [{\n      provide: ActionToggle,\n      useValue: ExampleCheckboxComponent\n  }]\n  ...\n})\nexport class ExampleComponent { }Step 5: Create action instances\nCreate actions in a component class so that they can be accessed from the template.\nimport { ActionOutletFactory } from '@ng-action-outlet/core';\n\n@Component(...)\nexport class ExampleComponent implements OnInit {\n    ...\n    group: ActionGroup;\n\n    constructor(private actionOutlet: ActionOutletFactory) { }\n\n    ngOnInit() {\n        this.group = this.actionOutlet.createGroup();\n        this.group.createToggle()\n          .setTitle('Example title')\n          .check();\n    }\n    ...\n}Step 6: Render the actions\nBind created actions to actionOutlet renderer directive.\nAvailable actions\n\nActionButton\nActionGroup\nActionToggle\n\nIn order to create custom action class, refer to ActionAbstract class.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Klemen Oslaj\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionOutletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActionOutletModule\n\n\n\ncluster_ActionOutletModule_declarations\n\n\n\ncluster_ActionOutletModule_exports\n\n\n\n\nActionOutletDirective\n\nActionOutletDirective\n\n\n\nActionOutletModule\n\nActionOutletModule\n\nActionOutletModule -->\n\nActionOutletDirective->ActionOutletModule\n\n\n\n\n\nActionOutletDirective \n\nActionOutletDirective \n\nActionOutletDirective  -->\n\nActionOutletModule->ActionOutletDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionButtonCallback   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionButtonComponentImpl   (projects/.../action-button.model.ts)\n                        \n                        \n                            ActionGroupComponentImpl   (projects/.../action-group.model.ts)\n                        \n                        \n                            ActionToggleCallback   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            ActionToggleComponentImpl   (projects/.../action-toggle.model.ts)\n                        \n                        \n                            AnyAction   (projects/.../action-outlet.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-button/action-button.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionButtonCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionButton fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionButtonComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionButton should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-group/action-group.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionGroupComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionGroup should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-toggle/action-toggle.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionToggleCallback\n                \n            \n            \n                \n                    Subscription next callback for ActionToggle fire$\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionToggleComponentImpl\n                \n            \n            \n                \n                    Type that components used by ActionToggle should implement\n\n                \n            \n            \n                \n                            ActionAbstractComponentImpl\n\n                \n            \n        \n    \n    projects/core/src/lib/action-outlet.model.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAction\n                \n            \n            \n                \n                    AnyAction type is a shorter way to define the default abstract action type\n\n                \n            \n            \n                \n                            ActionAbstract\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultAbstractOptions   (projects/.../action-abstract.ts)\n                        \n                        \n                            defaultButtonOptions   (projects/.../action-button.ts)\n                        \n                        \n                            defaultGroupOptions   (projects/.../action-group.ts)\n                        \n                        \n                            defaultToggleOptions   (projects/.../action-toggle.ts)\n                        \n                        \n                            unique   (projects/.../action-group.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/core/src/lib/action-abstract/action-abstract.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAbstractOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Required\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    title: '',\n    icon: '',\n    visible: true,\n    disabled: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionAbstract - shared between all actions\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-button/action-button.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultButtonOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionButtonOptions\n\n                        \n                    \n                    \n                        \n                            Default value : { }\n                        \n                    \n\n                \n                    \n                        Default options for ActionButton\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-group/action-group.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultGroupOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionGroupOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    children: [],\n    dropdown: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionGroup\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unique\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (children: AnyAction[]) => Array.from(\n    new Set(children)\n)\n                        \n                    \n\n                \n                    \n                        Will return a unique array of actions\n\n                    \n                \n\n            \n        \n\n    projects/core/src/lib/action-toggle/action-toggle.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultToggleOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionToggleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    checked: false,\n}\n                        \n                    \n\n                \n                    \n                        Default options for ActionToggle\nExtended by provided options in action constructor\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
